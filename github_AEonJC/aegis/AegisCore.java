package aegis;

import javacard.framework.*;
//import host.AegisMain;

/**
 *
 * @author Rajesh Kumar Pal
 * 22 Oct 2017
 */
public class AegisCore {
  //AES engine for AEGIS
  //private AES aes = null;
  
  // Defines
  public final static short LEN = 16;
  public final static byte SUCCESS = 0;
  public final static byte KEY_ERROR = -1;
  
  private byte[] plaintextblock = null;     // 16 bytes plaintext 
  private byte[] ciphertextblock = null;    // 16 bytes ciphertext 
  //private byte[] mac = null;        // authentication tag
  private byte[] state = null;      // state
  //private byte[] ekey = null;       // expanded scheduled keys
  private byte[] userkey = null;    // user inputed encryption key
  private short klen = 0;
  private byte[] ad = null;         // authenticated data
  private short adlen = 0;
  private byte[] nonce = null;     // public message number
  private short nlen = 0;
  private byte[] pt = null;         // plaintext
  private short ptlen = 0;
  private byte[] ct = null;         // ciphertext
  private short ctlen = 0;
  //private byte[] tag = null;
  //private short tlen = 0;
  private byte[] tempbuf = null;
  private byte[] tempkey = null;
  private byte[] tbblk = null;
  private byte[] ptblk = null;
  private byte[] ctblk = null;
  private byte[] tkblk = null;
  
  // constant is 32 bytes which is fibonacci sequence of 256
  private final static byte[] constant = {(byte)0x0, (byte)0x1, (byte)0x01, (byte)0x02, (byte)0x03, (byte)0x05, (byte)0x08, (byte)0x0d, (byte)0x15, (byte)0x22, (byte)0x37, (byte)0x59, (byte)0x90, (byte)0xe9, (byte)0x79, (byte)0x62, (byte)0xdb, (byte)0x3d, (byte)0x18, (byte)0x55, (byte)0x6d, (byte)0xc2, (byte)0x2f, (byte)0xf1, (byte)0x20, (byte)0x11, (byte)0x31, (byte)0x42, (byte)0x73, (byte)0xb5, (byte)0x28, (byte)0xdd};
    
    private final static byte[] TE0 = {
    (byte)0xc6,(byte)0x63,(byte)0x63,(byte)0xa5,  (byte)0xf8,(byte)0x7c,(byte)0x7c,(byte)0x84,  (byte)0xee,(byte)0x77,(byte)0x77,(byte)0x99,  (byte)0xf6,(byte)0x7b,(byte)0x7b,(byte)0x8d,
    (byte)0xff,(byte)0xf2,(byte)0xf2,(byte)0xd,   (byte)0xd6,(byte)0x6b,(byte)0x6b,(byte)0xbd,  (byte)0xde,(byte)0x6f,(byte)0x6f,(byte)0xb1,  (byte)0x91,(byte)0xc5,(byte)0xc5,(byte)0x54,
    (byte)0x60,(byte)0x30,(byte)0x30,(byte)0x50,  (byte)0x2,(byte)0x1,(byte)0x1,(byte)0x3,      (byte)0xce,(byte)0x67,(byte)0x67,(byte)0xa9,  (byte)0x56,(byte)0x2b,(byte)0x2b,(byte)0x7d,
    (byte)0xe7,(byte)0xfe,(byte)0xfe,(byte)0x19,  (byte)0xb5,(byte)0xd7,(byte)0xd7,(byte)0x62,  (byte)0x4d,(byte)0xab,(byte)0xab,(byte)0xe6,  (byte)0xec,(byte)0x76,(byte)0x76,(byte)0x9a,
    (byte)0x8f,(byte)0xca,(byte)0xca,(byte)0x45,  (byte)0x1f,(byte)0x82,(byte)0x82,(byte)0x9d,  (byte)0x89,(byte)0xc9,(byte)0xc9,(byte)0x40,  (byte)0xfa,(byte)0x7d,(byte)0x7d,(byte)0x87,
    (byte)0xef,(byte)0xfa,(byte)0xfa,(byte)0x15,  (byte)0xb2,(byte)0x59,(byte)0x59,(byte)0xeb,  (byte)0x8e,(byte)0x47,(byte)0x47,(byte)0xc9,  (byte)0xfb,(byte)0xf0,(byte)0xf0,(byte)0xb,
    (byte)0x41,(byte)0xad,(byte)0xad,(byte)0xec,  (byte)0xb3,(byte)0xd4,(byte)0xd4,(byte)0x67,  (byte)0x5f,(byte)0xa2,(byte)0xa2,(byte)0xfd,  (byte)0x45,(byte)0xaf,(byte)0xaf,(byte)0xea,
    (byte)0x23,(byte)0x9c,(byte)0x9c,(byte)0xbf,  (byte)0x53,(byte)0xa4,(byte)0xa4,(byte)0xf7,  (byte)0xe4,(byte)0x72,(byte)0x72,(byte)0x96,  (byte)0x9b,(byte)0xc0,(byte)0xc0,(byte)0x5b,
    (byte)0x75,(byte)0xb7,(byte)0xb7,(byte)0xc2,  (byte)0xe1,(byte)0xfd,(byte)0xfd,(byte)0x1c,  (byte)0x3d,(byte)0x93,(byte)0x93,(byte)0xae,  (byte)0x4c,(byte)0x26,(byte)0x26,(byte)0x6a,
    (byte)0x6c,(byte)0x36,(byte)0x36,(byte)0x5a,  (byte)0x7e,(byte)0x3f,(byte)0x3f,(byte)0x41,  (byte)0xf5,(byte)0xf7,(byte)0xf7,(byte)0x2,   (byte)0x83,(byte)0xcc,(byte)0xcc,(byte)0x4f,
    (byte)0x68,(byte)0x34,(byte)0x34,(byte)0x5c,  (byte)0x51,(byte)0xa5,(byte)0xa5,(byte)0xf4,  (byte)0xd1,(byte)0xe5,(byte)0xe5,(byte)0x34,  (byte)0xf9,(byte)0xf1,(byte)0xf1,(byte)0x8,
    (byte)0xe2,(byte)0x71,(byte)0x71,(byte)0x93,  (byte)0xab,(byte)0xd8,(byte)0xd8,(byte)0x73,  (byte)0x62,(byte)0x31,(byte)0x31,(byte)0x53,  (byte)0x2a,(byte)0x15,(byte)0x15,(byte)0x3f,
    (byte)0x8,(byte)0x4,(byte)0x4,(byte)0xc,      (byte)0x95,(byte)0xc7,(byte)0xc7,(byte)0x52,  (byte)0x46,(byte)0x23,(byte)0x23,(byte)0x65,  (byte)0x9d,(byte)0xc3,(byte)0xc3,(byte)0x5e,
    (byte)0x30,(byte)0x18,(byte)0x18,(byte)0x28,  (byte)0x37,(byte)0x96,(byte)0x96,(byte)0xa1,  (byte)0xa,(byte)0x5,(byte)0x5,(byte)0xf,      (byte)0x2f,(byte)0x9a,(byte)0x9a,(byte)0xb5,(byte)
    0xe,(byte)0x7,(byte)0x7,(byte)0x9,(byte)      0x24,(byte)0x12,(byte)0x12,(byte)0x36,(byte)  0x1b,(byte)0x80,(byte)0x80,(byte)0x9b,(byte)  0xdf,(byte)0xe2,(byte)0xe2,(byte)0x3d,(byte)
    0xcd,(byte)0xeb,(byte)0xeb,(byte)0x26,(byte)  0x4e,(byte)0x27,(byte)0x27,(byte)0x69,(byte)  0x7f,(byte)0xb2,(byte)0xb2,(byte)0xcd,(byte)  0xea,(byte)0x75,(byte)0x75,(byte)0x9f,(byte)
    0x12,(byte)0x9,(byte)0x9,(byte)0x1b,(byte)    0x1d,(byte)0x83,(byte)0x83,(byte)0x9e,(byte)  0x58,(byte)0x2c,(byte)0x2c,(byte)0x74,(byte)  0x34,(byte)0x1a,(byte)0x1a,(byte)0x2e,(byte)
    0x36,(byte)0x1b,(byte)0x1b,(byte)0x2d,(byte)  0xdc,(byte)0x6e,(byte)0x6e,(byte)0xb2,(byte)  0xb4,(byte)0x5a,(byte)0x5a,(byte)0xee,(byte)  0x5b,(byte)0xa0,(byte)0xa0,(byte)0xfb,(byte)
    0xa4,(byte)0x52,(byte)0x52,(byte)0xf6,(byte)  0x76,(byte)0x3b,(byte)0x3b,(byte)0x4d,(byte)  0xb7,(byte)0xd6,(byte)0xd6,(byte)0x61,(byte)  0x7d,(byte)0xb3,(byte)0xb3,(byte)0xce,(byte)
    0x52,(byte)0x29,(byte)0x29,(byte)0x7b,(byte)  0xdd,(byte)0xe3,(byte)0xe3,(byte)0x3e,(byte)  0x5e,(byte)0x2f,(byte)0x2f,(byte)0x71,(byte)  0x13,(byte)0x84,(byte)0x84,(byte)0x97,(byte)
    0xa6,(byte)0x53,(byte)0x53,(byte)0xf5,(byte)  0xb9,(byte)0xd1,(byte)0xd1,(byte)0x68,(byte)  0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)      0xc1,(byte)0xed,(byte)0xed,(byte)0x2c,(byte)
    0x40,(byte)0x20,(byte)0x20,(byte)0x60,(byte)  0xe3,(byte)0xfc,(byte)0xfc,(byte)0x1f,(byte)  0x79,(byte)0xb1,(byte)0xb1,(byte)0xc8,(byte)  0xb6,(byte)0x5b,(byte)0x5b,(byte)0xed,(byte)
    0xd4,(byte)0x6a,(byte)0x6a,(byte)0xbe,(byte)  0x8d,(byte)0xcb,(byte)0xcb,(byte)0x46,(byte)  0x67,(byte)0xbe,(byte)0xbe,(byte)0xd9,(byte)  0x72,(byte)0x39,(byte)0x39,(byte)0x4b,(byte)
    0x94,(byte)0x4a,(byte)0x4a,(byte)0xde,(byte)  0x98,(byte)0x4c,(byte)0x4c,(byte)0xd4,(byte)  0xb0,(byte)0x58,(byte)0x58,(byte)0xe8,(byte)  0x85,(byte)0xcf,(byte)0xcf,(byte)0x4a,(byte)
    0xbb,(byte)0xd0,(byte)0xd0,(byte)0x6b,(byte)  0xc5,(byte)0xef,(byte)0xef,(byte)0x2a,(byte)  0x4f,(byte)0xaa,(byte)0xaa,(byte)0xe5,(byte)  0xed,(byte)0xfb,(byte)0xfb,(byte)0x16,(byte)
    0x86,(byte)0x43,(byte)0x43,(byte)0xc5,(byte)  0x9a,(byte)0x4d,(byte)0x4d,(byte)0xd7,(byte)  0x66,(byte)0x33,(byte)0x33,(byte)0x55,(byte)  0x11,(byte)0x85,(byte)0x85,(byte)0x94,(byte)
    0x8a,(byte)0x45,(byte)0x45,(byte)0xcf,(byte)  0xe9,(byte)0xf9,(byte)0xf9,(byte)0x10,(byte)  0x4,(byte)0x2,(byte)0x2,(byte)0x6,(byte)      0xfe,(byte)0x7f,(byte)0x7f,(byte)0x81,(byte)
    0xa0,(byte)0x50,(byte)0x50,(byte)0xf0,(byte)  0x78,(byte)0x3c,(byte)0x3c,(byte)0x44,(byte)  0x25,(byte)0x9f,(byte)0x9f,(byte)0xba,(byte)  0x4b,(byte)0xa8,(byte)0xa8,(byte)0xe3,(byte)
    0xa2,(byte)0x51,(byte)0x51,(byte)0xf3,(byte)  0x5d,(byte)0xa3,(byte)0xa3,(byte)0xfe,(byte)  0x80,(byte)0x40,(byte)0x40,(byte)0xc0,(byte)  0x5,(byte)0x8f,(byte)0x8f,(byte)0x8a,(byte)
    0x3f,(byte)0x92,(byte)0x92,(byte)0xad,(byte)  0x21,(byte)0x9d,(byte)0x9d,(byte)0xbc,(byte)  0x70,(byte)0x38,(byte)0x38,(byte)0x48,(byte)  0xf1,(byte)0xf5,(byte)0xf5,(byte)0x4,(byte)
    0x63,(byte)0xbc,(byte)0xbc,(byte)0xdf,(byte)  0x77,(byte)0xb6,(byte)0xb6,(byte)0xc1,(byte)  0xaf,(byte)0xda,(byte)0xda,(byte)0x75,(byte)  0x42,(byte)0x21,(byte)0x21,(byte)0x63,(byte)
    0x20,(byte)0x10,(byte)0x10,(byte)0x30,(byte)  0xe5,(byte)0xff,(byte)0xff,(byte)0x1a,(byte)  0xfd,(byte)0xf3,(byte)0xf3,(byte)0xe,(byte)   0xbf,(byte)0xd2,(byte)0xd2,(byte)0x6d,(byte)
    0x81,(byte)0xcd,(byte)0xcd,(byte)0x4c,(byte)  0x18,(byte)0xc,(byte)0xc,(byte)0x14,(byte)    0x26,(byte)0x13,(byte)0x13,(byte)0x35,(byte)  0xc3,(byte)0xec,(byte)0xec,(byte)0x2f,(byte)
    0xbe,(byte)0x5f,(byte)0x5f,(byte)0xe1,(byte)  0x35,(byte)0x97,(byte)0x97,(byte)0xa2,(byte)  0x88,(byte)0x44,(byte)0x44,(byte)0xcc,(byte)  0x2e,(byte)0x17,(byte)0x17,(byte)0x39,(byte)
    0x93,(byte)0xc4,(byte)0xc4,(byte)0x57,(byte)  0x55,(byte)0xa7,(byte)0xa7,(byte)0xf2,(byte)  0xfc,(byte)0x7e,(byte)0x7e,(byte)0x82,(byte)  0x7a,(byte)0x3d,(byte)0x3d,(byte)0x47,(byte)
    0xc8,(byte)0x64,(byte)0x64,(byte)0xac,(byte)  0xba,(byte)0x5d,(byte)0x5d,(byte)0xe7,(byte)  0x32,(byte)0x19,(byte)0x19,(byte)0x2b,(byte)  0xe6,(byte)0x73,(byte)0x73,(byte)0x95,(byte)
    0xc0,(byte)0x60,(byte)0x60,(byte)0xa0,(byte)  0x19,(byte)0x81,(byte)0x81,(byte)0x98,(byte)  0x9e,(byte)0x4f,(byte)0x4f,(byte)0xd1,(byte)  0xa3,(byte)0xdc,(byte)0xdc,(byte)0x7f,(byte)
    0x44,(byte)0x22,(byte)0x22,(byte)0x66,(byte)  0x54,(byte)0x2a,(byte)0x2a,(byte)0x7e,(byte)  0x3b,(byte)0x90,(byte)0x90,(byte)0xab,(byte)  0xb,(byte)0x88,(byte)0x88,(byte)0x83,(byte)
    0x8c,(byte)0x46,(byte)0x46,(byte)0xca,(byte)  0xc7,(byte)0xee,(byte)0xee,(byte)0x29,(byte)  0x6b,(byte)0xb8,(byte)0xb8,(byte)0xd3,(byte)  0x28,(byte)0x14,(byte)0x14,(byte)0x3c,(byte)
    0xa7,(byte)0xde,(byte)0xde,(byte)0x79,(byte)  0xbc,(byte)0x5e,(byte)0x5e,(byte)0xe2,(byte)  0x16,(byte)0xb,(byte)0xb,(byte)0x1d,(byte)    0xad,(byte)0xdb,(byte)0xdb,(byte)0x76,(byte)
    0xdb,(byte)0xe0,(byte)0xe0,(byte)0x3b,(byte)  0x64,(byte)0x32,(byte)0x32,(byte)0x56,(byte)  0x74,(byte)0x3a,(byte)0x3a,(byte)0x4e,(byte)  0x14,(byte)0xa,(byte)0xa,(byte)0x1e,(byte)
    0x92,(byte)0x49,(byte)0x49,(byte)0xdb,(byte)  0xc,(byte)0x6,(byte)0x6,(byte)0xa,(byte)      0x48,(byte)0x24,(byte)0x24,(byte)0x6c,(byte)  0xb8,(byte)0x5c,(byte)0x5c,(byte)0xe4,(byte)
    0x9f,(byte)0xc2,(byte)0xc2,(byte)0x5d,(byte)  0xbd,(byte)0xd3,(byte)0xd3,(byte)0x6e,(byte)  0x43,(byte)0xac,(byte)0xac,(byte)0xef,(byte)  0xc4,(byte)0x62,(byte)0x62,(byte)0xa6,(byte)
    0x39,(byte)0x91,(byte)0x91,(byte)0xa8,(byte)  0x31,(byte)0x95,(byte)0x95,(byte)0xa4,(byte)  0xd3,(byte)0xe4,(byte)0xe4,(byte)0x37,(byte)  0xf2,(byte)0x79,(byte)0x79,(byte)0x8b,(byte)
    0xd5,(byte)0xe7,(byte)0xe7,(byte)0x32,(byte)  0x8b,(byte)0xc8,(byte)0xc8,(byte)0x43,(byte)  0x6e,(byte)0x37,(byte)0x37,(byte)0x59,(byte)  0xda,(byte)0x6d,(byte)0x6d,(byte)0xb7,(byte)
    0x1,(byte)0x8d,(byte)0x8d,(byte)0x8c,(byte)   0xb1,(byte)0xd5,(byte)0xd5,(byte)0x64,(byte)  0x9c,(byte)0x4e,(byte)0x4e,(byte)0xd2,(byte)  0x49,(byte)0xa9,(byte)0xa9,(byte)0xe0,(byte)
    0xd8,(byte)0x6c,(byte)0x6c,(byte)0xb4,(byte)  0xac,(byte)0x56,(byte)0x56,(byte)0xfa,(byte)  0xf3,(byte)0xf4,(byte)0xf4,(byte)0x7,(byte)   0xcf,(byte)0xea,(byte)0xea,(byte)0x25,(byte)
    0xca,(byte)0x65,(byte)0x65,(byte)0xaf,(byte)  0xf4,(byte)0x7a,(byte)0x7a,(byte)0x8e,(byte)  0x47,(byte)0xae,(byte)0xae,(byte)0xe9,(byte)  0x10,(byte)0x8,(byte)0x8,(byte)0x18,(byte)
    0x6f,(byte)0xba,(byte)0xba,(byte)0xd5,(byte)  0xf0,(byte)0x78,(byte)0x78,(byte)0x88,(byte)  0x4a,(byte)0x25,(byte)0x25,(byte)0x6f,(byte)  0x5c,(byte)0x2e,(byte)0x2e,(byte)0x72,(byte)
    0x38,(byte)0x1c,(byte)0x1c,(byte)0x24,(byte)  0x57,(byte)0xa6,(byte)0xa6,(byte)0xf1,(byte)  0x73,(byte)0xb4,(byte)0xb4,(byte)0xc7,(byte)  0x97,(byte)0xc6,(byte)0xc6,(byte)0x51,(byte)
    0xcb,(byte)0xe8,(byte)0xe8,(byte)0x23,(byte)  0xa1,(byte)0xdd,(byte)0xdd,(byte)0x7c,(byte)  0xe8,(byte)0x74,(byte)0x74,(byte)0x9c,(byte)  0x3e,(byte)0x1f,(byte)0x1f,(byte)0x21,(byte)
    0x96,(byte)0x4b,(byte)0x4b,(byte)0xdd,(byte)  0x61,(byte)0xbd,(byte)0xbd,(byte)0xdc,(byte)  0xd,(byte)0x8b,(byte)0x8b,(byte)0x86,(byte)   0xf,(byte)0x8a,(byte)0x8a,(byte)0x85,(byte)
    0xe0,(byte)0x70,(byte)0x70,(byte)0x90,(byte)  0x7c,(byte)0x3e,(byte)0x3e,(byte)0x42,(byte)  0x71,(byte)0xb5,(byte)0xb5,(byte)0xc4,(byte)  0xcc,(byte)0x66,(byte)0x66,(byte)0xaa,(byte)
    0x90,(byte)0x48,(byte)0x48,(byte)0xd8,(byte)  0x6,(byte)0x3,(byte)0x3,(byte)0x5,(byte)      0xf7,(byte)0xf6,(byte)0xf6,(byte)0x1,(byte)   0x1c,(byte)0xe,(byte)0xe,(byte)0x12,(byte)
    0xc2,(byte)0x61,(byte)0x61,(byte)0xa3,(byte)  0x6a,(byte)0x35,(byte)0x35,(byte)0x5f,(byte)  0xae,(byte)0x57,(byte)0x57,(byte)0xf9,(byte)  0x69,(byte)0xb9,(byte)0xb9,(byte)0xd0,(byte)
    0x17,(byte)0x86,(byte)0x86,(byte)0x91,(byte)  0x99,(byte)0xc1,(byte)0xc1,(byte)0x58,(byte)  0x3a,(byte)0x1d,(byte)0x1d,(byte)0x27,(byte)  0x27,(byte)0x9e,(byte)0x9e,(byte)0xb9,(byte)
    0xd9,(byte)0xe1,(byte)0xe1,(byte)0x38,(byte)  0xeb,(byte)0xf8,(byte)0xf8,(byte)0x13,(byte)  0x2b,(byte)0x98,(byte)0x98,(byte)0xb3,(byte)  0x22,(byte)0x11,(byte)0x11,(byte)0x33,(byte)
    0xd2,(byte)0x69,(byte)0x69,(byte)0xbb,(byte)  0xa9,(byte)0xd9,(byte)0xd9,(byte)0x70,(byte)  0x7,(byte)0x8e,(byte)0x8e,(byte)0x89,(byte)   0x33,(byte)0x94,(byte)0x94,(byte)0xa7,(byte)
    0x2d,(byte)0x9b,(byte)0x9b,(byte)0xb6,(byte)  0x3c,(byte)0x1e,(byte)0x1e,(byte)0x22,(byte)  0x15,(byte)0x87,(byte)0x87,(byte)0x92,(byte)  0xc9,(byte)0xe9,(byte)0xe9,(byte)0x20,(byte)
    0x87,(byte)0xce,(byte)0xce,(byte)0x49,(byte)  0xaa,(byte)0x55,(byte)0x55,(byte)0xff,(byte)  0x50,(byte)0x28,(byte)0x28,(byte)0x78,(byte)  0xa5,(byte)0xdf,(byte)0xdf,(byte)0x7a,(byte)
    0x3,(byte)0x8c,(byte)0x8c,(byte)0x8f,(byte)   0x59,(byte)0xa1,(byte)0xa1,(byte)0xf8,(byte)  0x9,(byte)0x89,(byte)0x89,(byte)0x80,(byte)   0x1a,(byte)0xd,(byte)0xd,(byte)0x17,(byte)
    0x65,(byte)0xbf,(byte)0xbf,(byte)0xda,(byte)  0xd7,(byte)0xe6,(byte)0xe6,(byte)0x31,(byte)  0x84,(byte)0x42,(byte)0x42,(byte)0xc6,(byte)  0xd0,(byte)0x68,(byte)0x68,(byte)0xb8,(byte)
    0x82,(byte)0x41,(byte)0x41,(byte)0xc3,(byte)  0x29,(byte)0x99,(byte)0x99,(byte)0xb0,(byte)  0x5a,(byte)0x2d,(byte)0x2d,(byte)0x77,(byte)  0x1e,(byte)0xf,(byte)0xf,(byte)0x11,(byte)
    0x7b,(byte)0xb0,(byte)0xb0,(byte)0xcb,(byte)  0xa8,(byte)0x54,(byte)0x54,(byte)0xfc,(byte)  0x6d,(byte)0xbb,(byte)0xbb,(byte)0xd6,(byte)  0x2c,(byte)0x16,(byte)0x16,(byte)0x3a};
    
    
    private final static byte[] TE1 = {
    (byte)0xa5,(byte)0xc6,(byte)0x63,(byte)0x63,(byte)  0x84,(byte)0xf8,(byte)0x7c,(byte)0x7c,(byte)  0x99,(byte)0xee,(byte)0x77,(byte)0x77,(byte)  0x8d,(byte)0xf6,(byte)0x7b,(byte)0x7b,(byte)
    0xd,(byte)0xff,(byte)0xf2,(byte)0xf2,(byte)   0xbd,(byte)0xd6,(byte)0x6b,(byte)0x6b,(byte)  0xb1,(byte)0xde,(byte)0x6f,(byte)0x6f,(byte)  0x54,(byte)0x91,(byte)0xc5,(byte)0xc5,(byte)
    0x50,(byte)0x60,(byte)0x30,(byte)0x30,(byte)  0x3,(byte)0x2,(byte)0x1,(byte)0x1,(byte)      0xa9,(byte)0xce,(byte)0x67,(byte)0x67,(byte)  0x7d,(byte)0x56,(byte)0x2b,(byte)0x2b,(byte)
    0x19,(byte)0xe7,(byte)0xfe,(byte)0xfe,(byte)  0x62,(byte)0xb5,(byte)0xd7,(byte)0xd7,(byte)  0xe6,(byte)0x4d,(byte)0xab,(byte)0xab,(byte)  0x9a,(byte)0xec,(byte)0x76,(byte)0x76,(byte)
    0x45,(byte)0x8f,(byte)0xca,(byte)0xca,(byte)  0x9d,(byte)0x1f,(byte)0x82,(byte)0x82,(byte)  0x40,(byte)0x89,(byte)0xc9,(byte)0xc9,(byte)  0x87,(byte)0xfa,(byte)0x7d,(byte)0x7d,(byte)
    0x15,(byte)0xef,(byte)0xfa,(byte)0xfa,(byte)  0xeb,(byte)0xb2,(byte)0x59,(byte)0x59,(byte)  0xc9,(byte)0x8e,(byte)0x47,(byte)0x47,(byte)  0xb,(byte)0xfb,(byte)0xf0,(byte)0xf0,(byte)
    0xec,(byte)0x41,(byte)0xad,(byte)0xad,(byte)  0x67,(byte)0xb3,(byte)0xd4,(byte)0xd4,(byte)  0xfd,(byte)0x5f,(byte)0xa2,(byte)0xa2,(byte)  0xea,(byte)0x45,(byte)0xaf,(byte)0xaf,(byte)
    0xbf,(byte)0x23,(byte)0x9c,(byte)0x9c,(byte)  0xf7,(byte)0x53,(byte)0xa4,(byte)0xa4,(byte)  0x96,(byte)0xe4,(byte)0x72,(byte)0x72,(byte)  0x5b,(byte)0x9b,(byte)0xc0,(byte)0xc0,(byte)
    0xc2,(byte)0x75,(byte)0xb7,(byte)0xb7,(byte)  0x1c,(byte)0xe1,(byte)0xfd,(byte)0xfd,(byte)  0xae,(byte)0x3d,(byte)0x93,(byte)0x93,(byte)  0x6a,(byte)0x4c,(byte)0x26,(byte)0x26,(byte)
    0x5a,(byte)0x6c,(byte)0x36,(byte)0x36,(byte)  0x41,(byte)0x7e,(byte)0x3f,(byte)0x3f,(byte)  0x2,(byte)0xf5,(byte)0xf7,(byte)0xf7,(byte)   0x4f,(byte)0x83,(byte)0xcc,(byte)0xcc,(byte)
    0x5c,(byte)0x68,(byte)0x34,(byte)0x34,(byte)  0xf4,(byte)0x51,(byte)0xa5,(byte)0xa5,(byte)  0x34,(byte)0xd1,(byte)0xe5,(byte)0xe5,(byte)  0x8,(byte)0xf9,(byte)0xf1,(byte)0xf1,(byte)
    0x93,(byte)0xe2,(byte)0x71,(byte)0x71,(byte)  0x73,(byte)0xab,(byte)0xd8,(byte)0xd8,(byte)  0x53,(byte)0x62,(byte)0x31,(byte)0x31,(byte)  0x3f,(byte)0x2a,(byte)0x15,(byte)0x15,(byte)
    0xc,(byte)0x8,(byte)0x4,(byte)0x4,(byte)      0x52,(byte)0x95,(byte)0xc7,(byte)0xc7,(byte)  0x65,(byte)0x46,(byte)0x23,(byte)0x23,(byte)  0x5e,(byte)0x9d,(byte)0xc3,(byte)0xc3,(byte)
    0x28,(byte)0x30,(byte)0x18,(byte)0x18,(byte)  0xa1,(byte)0x37,(byte)0x96,(byte)0x96,(byte)  0xf,(byte)0xa,(byte)0x5,(byte)0x5,(byte)      0xb5,(byte)0x2f,(byte)0x9a,(byte)0x9a,(byte)
    0x9,(byte)0xe,(byte)0x7,(byte)0x7,(byte)      0x36,(byte)0x24,(byte)0x12,(byte)0x12,(byte)  0x9b,(byte)0x1b,(byte)0x80,(byte)0x80,(byte)  0x3d,(byte)0xdf,(byte)0xe2,(byte)0xe2,(byte)
    0x26,(byte)0xcd,(byte)0xeb,(byte)0xeb,(byte)  0x69,(byte)0x4e,(byte)0x27,(byte)0x27,(byte)  0xcd,(byte)0x7f,(byte)0xb2,(byte)0xb2,(byte)  0x9f,(byte)0xea,(byte)0x75,(byte)0x75,(byte)
    0x1b,(byte)0x12,(byte)0x9,(byte)0x9,(byte)    0x9e,(byte)0x1d,(byte)0x83,(byte)0x83,(byte)  0x74,(byte)0x58,(byte)0x2c,(byte)0x2c,(byte)  0x2e,(byte)0x34,(byte)0x1a,(byte)0x1a,(byte)
    0x2d,(byte)0x36,(byte)0x1b,(byte)0x1b,(byte)  0xb2,(byte)0xdc,(byte)0x6e,(byte)0x6e,(byte)  0xee,(byte)0xb4,(byte)0x5a,(byte)0x5a,(byte)  0xfb,(byte)0x5b,(byte)0xa0,(byte)0xa0,(byte)
    0xf6,(byte)0xa4,(byte)0x52,(byte)0x52,(byte)  0x4d,(byte)0x76,(byte)0x3b,(byte)0x3b,(byte)  0x61,(byte)0xb7,(byte)0xd6,(byte)0xd6,(byte)  0xce,(byte)0x7d,(byte)0xb3,(byte)0xb3,(byte)
    0x7b,(byte)0x52,(byte)0x29,(byte)0x29,(byte)  0x3e,(byte)0xdd,(byte)0xe3,(byte)0xe3,(byte)  0x71,(byte)0x5e,(byte)0x2f,(byte)0x2f,(byte)  0x97,(byte)0x13,(byte)0x84,(byte)0x84,(byte)
    0xf5,(byte)0xa6,(byte)0x53,(byte)0x53,(byte)  0x68,(byte)0xb9,(byte)0xd1,(byte)0xd1,(byte)  0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)      0x2c,(byte)0xc1,(byte)0xed,(byte)0xed,(byte)
    0x60,(byte)0x40,(byte)0x20,(byte)0x20,(byte)  0x1f,(byte)0xe3,(byte)0xfc,(byte)0xfc,(byte)  0xc8,(byte)0x79,(byte)0xb1,(byte)0xb1,(byte)  0xed,(byte)0xb6,(byte)0x5b,(byte)0x5b,(byte)
    0xbe,(byte)0xd4,(byte)0x6a,(byte)0x6a,(byte)  0x46,(byte)0x8d,(byte)0xcb,(byte)0xcb,(byte)  0xd9,(byte)0x67,(byte)0xbe,(byte)0xbe,(byte)  0x4b,(byte)0x72,(byte)0x39,(byte)0x39,(byte)
    0xde,(byte)0x94,(byte)0x4a,(byte)0x4a,(byte)  0xd4,(byte)0x98,(byte)0x4c,(byte)0x4c,(byte)  0xe8,(byte)0xb0,(byte)0x58,(byte)0x58,(byte)  0x4a,(byte)0x85,(byte)0xcf,(byte)0xcf,(byte)
    0x6b,(byte)0xbb,(byte)0xd0,(byte)0xd0,(byte)  0x2a,(byte)0xc5,(byte)0xef,(byte)0xef,(byte)  0xe5,(byte)0x4f,(byte)0xaa,(byte)0xaa,(byte)  0x16,(byte)0xed,(byte)0xfb,(byte)0xfb,(byte)
    0xc5,(byte)0x86,(byte)0x43,(byte)0x43,(byte)  0xd7,(byte)0x9a,(byte)0x4d,(byte)0x4d,(byte)  0x55,(byte)0x66,(byte)0x33,(byte)0x33,(byte)  0x94,(byte)0x11,(byte)0x85,(byte)0x85,(byte)
    0xcf,(byte)0x8a,(byte)0x45,(byte)0x45,(byte)  0x10,(byte)0xe9,(byte)0xf9,(byte)0xf9,(byte)  0x6,(byte)0x4,(byte)0x2,(byte)0x2,(byte)      0x81,(byte)0xfe,(byte)0x7f,(byte)0x7f,(byte)
    0xf0,(byte)0xa0,(byte)0x50,(byte)0x50,(byte)  0x44,(byte)0x78,(byte)0x3c,(byte)0x3c,(byte)  0xba,(byte)0x25,(byte)0x9f,(byte)0x9f,(byte)  0xe3,(byte)0x4b,(byte)0xa8,(byte)0xa8,(byte)
    0xf3,(byte)0xa2,(byte)0x51,(byte)0x51,(byte)  0xfe,(byte)0x5d,(byte)0xa3,(byte)0xa3,(byte)  0xc0,(byte)0x80,(byte)0x40,(byte)0x40,(byte)  0x8a,(byte)0x5,(byte)0x8f,(byte)0x8f,(byte)
    0xad,(byte)0x3f,(byte)0x92,(byte)0x92,(byte)  0xbc,(byte)0x21,(byte)0x9d,(byte)0x9d,(byte)  0x48,(byte)0x70,(byte)0x38,(byte)0x38,(byte)  0x4,(byte)0xf1,(byte)0xf5,(byte)0xf5,(byte)
    0xdf,(byte)0x63,(byte)0xbc,(byte)0xbc,(byte)  0xc1,(byte)0x77,(byte)0xb6,(byte)0xb6,(byte)  0x75,(byte)0xaf,(byte)0xda,(byte)0xda,(byte)  0x63,(byte)0x42,(byte)0x21,(byte)0x21,(byte)
    0x30,(byte)0x20,(byte)0x10,(byte)0x10,(byte)  0x1a,(byte)0xe5,(byte)0xff,(byte)0xff,(byte)  0xe,(byte)0xfd,(byte)0xf3,(byte)0xf3,(byte)   0x6d,(byte)0xbf,(byte)0xd2,(byte)0xd2,(byte)
    0x4c,(byte)0x81,(byte)0xcd,(byte)0xcd,(byte)  0x14,(byte)0x18,(byte)0xc,(byte)0xc,(byte)    0x35,(byte)0x26,(byte)0x13,(byte)0x13,(byte)  0x2f,(byte)0xc3,(byte)0xec,(byte)0xec,(byte)
    0xe1,(byte)0xbe,(byte)0x5f,(byte)0x5f,(byte)  0xa2,(byte)0x35,(byte)0x97,(byte)0x97,(byte)  0xcc,(byte)0x88,(byte)0x44,(byte)0x44,(byte)  0x39,(byte)0x2e,(byte)0x17,(byte)0x17,(byte)
    0x57,(byte)0x93,(byte)0xc4,(byte)0xc4,(byte)  0xf2,(byte)0x55,(byte)0xa7,(byte)0xa7,(byte)  0x82,(byte)0xfc,(byte)0x7e,(byte)0x7e,(byte)  0x47,(byte)0x7a,(byte)0x3d,(byte)0x3d,(byte)
    0xac,(byte)0xc8,(byte)0x64,(byte)0x64,(byte)  0xe7,(byte)0xba,(byte)0x5d,(byte)0x5d,(byte)  0x2b,(byte)0x32,(byte)0x19,(byte)0x19,(byte)  0x95,(byte)0xe6,(byte)0x73,(byte)0x73,(byte)
    0xa0,(byte)0xc0,(byte)0x60,(byte)0x60,(byte)  0x98,(byte)0x19,(byte)0x81,(byte)0x81,(byte)  0xd1,(byte)0x9e,(byte)0x4f,(byte)0x4f,(byte)  0x7f,(byte)0xa3,(byte)0xdc,(byte)0xdc,(byte)
    0x66,(byte)0x44,(byte)0x22,(byte)0x22,(byte)  0x7e,(byte)0x54,(byte)0x2a,(byte)0x2a,(byte)  0xab,(byte)0x3b,(byte)0x90,(byte)0x90,(byte)  0x83,(byte)0xb,(byte)0x88,(byte)0x88,(byte)
    0xca,(byte)0x8c,(byte)0x46,(byte)0x46,(byte)  0x29,(byte)0xc7,(byte)0xee,(byte)0xee,(byte)  0xd3,(byte)0x6b,(byte)0xb8,(byte)0xb8,(byte)  0x3c,(byte)0x28,(byte)0x14,(byte)0x14,(byte)
    0x79,(byte)0xa7,(byte)0xde,(byte)0xde,(byte)  0xe2,(byte)0xbc,(byte)0x5e,(byte)0x5e,(byte)  0x1d,(byte)0x16,(byte)0xb,(byte)0xb,(byte)    0x76,(byte)0xad,(byte)0xdb,(byte)0xdb,(byte)
    0x3b,(byte)0xdb,(byte)0xe0,(byte)0xe0,(byte)  0x56,(byte)0x64,(byte)0x32,(byte)0x32,(byte)  0x4e,(byte)0x74,(byte)0x3a,(byte)0x3a,(byte)  0x1e,(byte)0x14,(byte)0xa,(byte)0xa,(byte)
    0xdb,(byte)0x92,(byte)0x49,(byte)0x49,(byte)  0xa,(byte)0xc,(byte)0x6,(byte)0x6,(byte)      0x6c,(byte)0x48,(byte)0x24,(byte)0x24,(byte)  0xe4,(byte)0xb8,(byte)0x5c,(byte)0x5c,(byte)
    0x5d,(byte)0x9f,(byte)0xc2,(byte)0xc2,(byte)  0x6e,(byte)0xbd,(byte)0xd3,(byte)0xd3,(byte)  0xef,(byte)0x43,(byte)0xac,(byte)0xac,(byte)  0xa6,(byte)0xc4,(byte)0x62,(byte)0x62,(byte)
    0xa8,(byte)0x39,(byte)0x91,(byte)0x91,(byte)  0xa4,(byte)0x31,(byte)0x95,(byte)0x95,(byte)  0x37,(byte)0xd3,(byte)0xe4,(byte)0xe4,(byte)  0x8b,(byte)0xf2,(byte)0x79,(byte)0x79,(byte)
    0x32,(byte)0xd5,(byte)0xe7,(byte)0xe7,(byte)  0x43,(byte)0x8b,(byte)0xc8,(byte)0xc8,(byte)  0x59,(byte)0x6e,(byte)0x37,(byte)0x37,(byte)  0xb7,(byte)0xda,(byte)0x6d,(byte)0x6d,(byte)
    0x8c,(byte)0x1,(byte)0x8d,(byte)0x8d,(byte)   0x64,(byte)0xb1,(byte)0xd5,(byte)0xd5,(byte)  0xd2,(byte)0x9c,(byte)0x4e,(byte)0x4e,(byte)  0xe0,(byte)0x49,(byte)0xa9,(byte)0xa9,(byte)
    0xb4,(byte)0xd8,(byte)0x6c,(byte)0x6c,(byte)  0xfa,(byte)0xac,(byte)0x56,(byte)0x56,(byte)  0x7,(byte)0xf3,(byte)0xf4,(byte)0xf4,(byte)   0x25,(byte)0xcf,(byte)0xea,(byte)0xea,(byte)
    0xaf,(byte)0xca,(byte)0x65,(byte)0x65,(byte)  0x8e,(byte)0xf4,(byte)0x7a,(byte)0x7a,(byte)  0xe9,(byte)0x47,(byte)0xae,(byte)0xae,(byte)  0x18,(byte)0x10,(byte)0x8,(byte)0x8,(byte)
    0xd5,(byte)0x6f,(byte)0xba,(byte)0xba,(byte)  0x88,(byte)0xf0,(byte)0x78,(byte)0x78,(byte)  0x6f,(byte)0x4a,(byte)0x25,(byte)0x25,(byte)  0x72,(byte)0x5c,(byte)0x2e,(byte)0x2e,(byte)
    0x24,(byte)0x38,(byte)0x1c,(byte)0x1c,(byte)  0xf1,(byte)0x57,(byte)0xa6,(byte)0xa6,(byte)  0xc7,(byte)0x73,(byte)0xb4,(byte)0xb4,(byte)  0x51,(byte)0x97,(byte)0xc6,(byte)0xc6,(byte)
    0x23,(byte)0xcb,(byte)0xe8,(byte)0xe8,(byte)  0x7c,(byte)0xa1,(byte)0xdd,(byte)0xdd,(byte)  0x9c,(byte)0xe8,(byte)0x74,(byte)0x74,(byte)  0x21,(byte)0x3e,(byte)0x1f,(byte)0x1f,(byte)
    0xdd,(byte)0x96,(byte)0x4b,(byte)0x4b,(byte)  0xdc,(byte)0x61,(byte)0xbd,(byte)0xbd,(byte)  0x86,(byte)0xd,(byte)0x8b,(byte)0x8b,(byte)   0x85,(byte)0xf,(byte)0x8a,(byte)0x8a,(byte)
    0x90,(byte)0xe0,(byte)0x70,(byte)0x70,(byte)  0x42,(byte)0x7c,(byte)0x3e,(byte)0x3e,(byte)  0xc4,(byte)0x71,(byte)0xb5,(byte)0xb5,(byte)  0xaa,(byte)0xcc,(byte)0x66,(byte)0x66,(byte)
    0xd8,(byte)0x90,(byte)0x48,(byte)0x48,(byte)  0x5,(byte)0x6,(byte)0x3,(byte)0x3,(byte)      0x1,(byte)0xf7,(byte)0xf6,(byte)0xf6,(byte)   0x12,(byte)0x1c,(byte)0xe,(byte)0xe,(byte)
    0xa3,(byte)0xc2,(byte)0x61,(byte)0x61,(byte)  0x5f,(byte)0x6a,(byte)0x35,(byte)0x35,(byte)  0xf9,(byte)0xae,(byte)0x57,(byte)0x57,(byte)  0xd0,(byte)0x69,(byte)0xb9,(byte)0xb9,(byte)
    0x91,(byte)0x17,(byte)0x86,(byte)0x86,(byte)  0x58,(byte)0x99,(byte)0xc1,(byte)0xc1,(byte)  0x27,(byte)0x3a,(byte)0x1d,(byte)0x1d,(byte)  0xb9,(byte)0x27,(byte)0x9e,(byte)0x9e,(byte)
    0x38,(byte)0xd9,(byte)0xe1,(byte)0xe1,(byte)  0x13,(byte)0xeb,(byte)0xf8,(byte)0xf8,(byte)  0xb3,(byte)0x2b,(byte)0x98,(byte)0x98,(byte)  0x33,(byte)0x22,(byte)0x11,(byte)0x11,(byte)
    0xbb,(byte)0xd2,(byte)0x69,(byte)0x69,(byte)  0x70,(byte)0xa9,(byte)0xd9,(byte)0xd9,(byte)  0x89,(byte)0x7,(byte)0x8e,(byte)0x8e,(byte)   0xa7,(byte)0x33,(byte)0x94,(byte)0x94,(byte)
    0xb6,(byte)0x2d,(byte)0x9b,(byte)0x9b,(byte)  0x22,(byte)0x3c,(byte)0x1e,(byte)0x1e,(byte)  0x92,(byte)0x15,(byte)0x87,(byte)0x87,(byte)  0x20,(byte)0xc9,(byte)0xe9,(byte)0xe9,(byte)
    0x49,(byte)0x87,(byte)0xce,(byte)0xce,(byte)  0xff,(byte)0xaa,(byte)0x55,(byte)0x55,(byte)  0x78,(byte)0x50,(byte)0x28,(byte)0x28,(byte)  0x7a,(byte)0xa5,(byte)0xdf,(byte)0xdf,(byte)
    0x8f,(byte)0x3,(byte)0x8c,(byte)0x8c,(byte)   0xf8,(byte)0x59,(byte)0xa1,(byte)0xa1,(byte)  0x80,(byte)0x9,(byte)0x89,(byte)0x89,(byte)   0x17,(byte)0x1a,(byte)0xd,(byte)0xd,(byte)
    0xda,(byte)0x65,(byte)0xbf,(byte)0xbf,(byte)  0x31,(byte)0xd7,(byte)0xe6,(byte)0xe6,(byte)  0xc6,(byte)0x84,(byte)0x42,(byte)0x42,(byte)  0xb8,(byte)0xd0,(byte)0x68,(byte)0x68,(byte)
    0xc3,(byte)0x82,(byte)0x41,(byte)0x41,(byte)  0xb0,(byte)0x29,(byte)0x99,(byte)0x99,(byte)  0x77,(byte)0x5a,(byte)0x2d,(byte)0x2d,(byte)  0x11,(byte)0x1e,(byte)0xf,(byte)0xf,(byte)
    0xcb,(byte)0x7b,(byte)0xb0,(byte)0xb0,(byte)  0xfc,(byte)0xa8,(byte)0x54,(byte)0x54,(byte)  0xd6,(byte)0x6d,(byte)0xbb,(byte)0xbb,(byte)  0x3a,(byte)0x2c,(byte)0x16,(byte)0x16};
    
    
    private final static byte[] TE2 = {
    (byte)0x63,(byte)0xa5,(byte)0xc6,(byte)0x63,(byte)  0x7c,(byte)0x84,(byte)0xf8,(byte)0x7c,(byte)  0x77,(byte)0x99,(byte)0xee,(byte)0x77,(byte)  0x7b,(byte)0x8d,(byte)0xf6,(byte)0x7b,(byte)
    0xf2,(byte)0xd,(byte)0xff,(byte)0xf2,(byte)   0x6b,(byte)0xbd,(byte)0xd6,(byte)0x6b,(byte)  0x6f,(byte)0xb1,(byte)0xde,(byte)0x6f,(byte)  0xc5,(byte)0x54,(byte)0x91,(byte)0xc5,(byte)
    0x30,(byte)0x50,(byte)0x60,(byte)0x30,(byte)  0x1,(byte)0x3,(byte)0x2,(byte)0x1,(byte)      0x67,(byte)0xa9,(byte)0xce,(byte)0x67,(byte)  0x2b,(byte)0x7d,(byte)0x56,(byte)0x2b,(byte)
    0xfe,(byte)0x19,(byte)0xe7,(byte)0xfe,(byte)  0xd7,(byte)0x62,(byte)0xb5,(byte)0xd7,(byte)  0xab,(byte)0xe6,(byte)0x4d,(byte)0xab,(byte)  0x76,(byte)0x9a,(byte)0xec,(byte)0x76,(byte)
    0xca,(byte)0x45,(byte)0x8f,(byte)0xca,(byte)  0x82,(byte)0x9d,(byte)0x1f,(byte)0x82,(byte)  0xc9,(byte)0x40,(byte)0x89,(byte)0xc9,(byte)  0x7d,(byte)0x87,(byte)0xfa,(byte)0x7d,(byte)
    0xfa,(byte)0x15,(byte)0xef,(byte)0xfa,(byte)  0x59,(byte)0xeb,(byte)0xb2,(byte)0x59,(byte)  0x47,(byte)0xc9,(byte)0x8e,(byte)0x47,(byte)  0xf0,(byte)0xb,(byte)0xfb,(byte)0xf0,(byte)
    0xad,(byte)0xec,(byte)0x41,(byte)0xad,(byte)  0xd4,(byte)0x67,(byte)0xb3,(byte)0xd4,(byte)  0xa2,(byte)0xfd,(byte)0x5f,(byte)0xa2,(byte)  0xaf,(byte)0xea,(byte)0x45,(byte)0xaf,(byte)
    0x9c,(byte)0xbf,(byte)0x23,(byte)0x9c,(byte)  0xa4,(byte)0xf7,(byte)0x53,(byte)0xa4,(byte)  0x72,(byte)0x96,(byte)0xe4,(byte)0x72,(byte)  0xc0,(byte)0x5b,(byte)0x9b,(byte)0xc0,(byte)
    0xb7,(byte)0xc2,(byte)0x75,(byte)0xb7,(byte)  0xfd,(byte)0x1c,(byte)0xe1,(byte)0xfd,(byte)  0x93,(byte)0xae,(byte)0x3d,(byte)0x93,(byte)  0x26,(byte)0x6a,(byte)0x4c,(byte)0x26,(byte)
    0x36,(byte)0x5a,(byte)0x6c,(byte)0x36,(byte)  0x3f,(byte)0x41,(byte)0x7e,(byte)0x3f,(byte)  0xf7,(byte)0x2,(byte)0xf5,(byte)0xf7,(byte)   0xcc,(byte)0x4f,(byte)0x83,(byte)0xcc,(byte)
    0x34,(byte)0x5c,(byte)0x68,(byte)0x34,(byte)  0xa5,(byte)0xf4,(byte)0x51,(byte)0xa5,(byte)  0xe5,(byte)0x34,(byte)0xd1,(byte)0xe5,(byte)  0xf1,(byte)0x8,(byte)0xf9,(byte)0xf1,(byte)
    0x71,(byte)0x93,(byte)0xe2,(byte)0x71,(byte)  0xd8,(byte)0x73,(byte)0xab,(byte)0xd8,(byte)  0x31,(byte)0x53,(byte)0x62,(byte)0x31,(byte)  0x15,(byte)0x3f,(byte)0x2a,(byte)0x15,(byte)
    0x4,(byte)0xc,(byte)0x8,(byte)0x4,(byte)      0xc7,(byte)0x52,(byte)0x95,(byte)0xc7,(byte)  0x23,(byte)0x65,(byte)0x46,(byte)0x23,(byte)  0xc3,(byte)0x5e,(byte)0x9d,(byte)0xc3,(byte)
    0x18,(byte)0x28,(byte)0x30,(byte)0x18,(byte)  0x96,(byte)0xa1,(byte)0x37,(byte)0x96,(byte)  0x5,(byte)0xf,(byte)0xa,(byte)0x5,(byte)      0x9a,(byte)0xb5,(byte)0x2f,(byte)0x9a,(byte)
    0x7,(byte)0x9,(byte)0xe,(byte)0x7,(byte)      0x12,(byte)0x36,(byte)0x24,(byte)0x12,(byte)  0x80,(byte)0x9b,(byte)0x1b,(byte)0x80,(byte)  0xe2,(byte)0x3d,(byte)0xdf,(byte)0xe2,(byte)
    0xeb,(byte)0x26,(byte)0xcd,(byte)0xeb,(byte)  0x27,(byte)0x69,(byte)0x4e,(byte)0x27,(byte)  0xb2,(byte)0xcd,(byte)0x7f,(byte)0xb2,(byte)  0x75,(byte)0x9f,(byte)0xea,(byte)0x75,(byte)
    0x9,(byte)0x1b,(byte)0x12,(byte)0x9,(byte)    0x83,(byte)0x9e,(byte)0x1d,(byte)0x83,(byte)  0x2c,(byte)0x74,(byte)0x58,(byte)0x2c,(byte)  0x1a,(byte)0x2e,(byte)0x34,(byte)0x1a,(byte)
    0x1b,(byte)0x2d,(byte)0x36,(byte)0x1b,(byte)  0x6e,(byte)0xb2,(byte)0xdc,(byte)0x6e,(byte)  0x5a,(byte)0xee,(byte)0xb4,(byte)0x5a,(byte)  0xa0,(byte)0xfb,(byte)0x5b,(byte)0xa0,(byte)
    0x52,(byte)0xf6,(byte)0xa4,(byte)0x52,(byte)  0x3b,(byte)0x4d,(byte)0x76,(byte)0x3b,(byte)  0xd6,(byte)0x61,(byte)0xb7,(byte)0xd6,(byte)  0xb3,(byte)0xce,(byte)0x7d,(byte)0xb3,(byte)
    0x29,(byte)0x7b,(byte)0x52,(byte)0x29,(byte)  0xe3,(byte)0x3e,(byte)0xdd,(byte)0xe3,(byte)  0x2f,(byte)0x71,(byte)0x5e,(byte)0x2f,(byte)  0x84,(byte)0x97,(byte)0x13,(byte)0x84,(byte)
    0x53,(byte)0xf5,(byte)0xa6,(byte)0x53,(byte)  0xd1,(byte)0x68,(byte)0xb9,(byte)0xd1,(byte)  0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)      0xed,(byte)0x2c,(byte)0xc1,(byte)0xed,(byte)
    0x20,(byte)0x60,(byte)0x40,(byte)0x20,(byte)  0xfc,(byte)0x1f,(byte)0xe3,(byte)0xfc,(byte)  0xb1,(byte)0xc8,(byte)0x79,(byte)0xb1,(byte)  0x5b,(byte)0xed,(byte)0xb6,(byte)0x5b,(byte)
    0x6a,(byte)0xbe,(byte)0xd4,(byte)0x6a,(byte)  0xcb,(byte)0x46,(byte)0x8d,(byte)0xcb,(byte)  0xbe,(byte)0xd9,(byte)0x67,(byte)0xbe,(byte)  0x39,(byte)0x4b,(byte)0x72,(byte)0x39,(byte)
    0x4a,(byte)0xde,(byte)0x94,(byte)0x4a,(byte)  0x4c,(byte)0xd4,(byte)0x98,(byte)0x4c,(byte)  0x58,(byte)0xe8,(byte)0xb0,(byte)0x58,(byte)  0xcf,(byte)0x4a,(byte)0x85,(byte)0xcf,(byte)
    0xd0,(byte)0x6b,(byte)0xbb,(byte)0xd0,(byte)  0xef,(byte)0x2a,(byte)0xc5,(byte)0xef,(byte)  0xaa,(byte)0xe5,(byte)0x4f,(byte)0xaa,(byte)  0xfb,(byte)0x16,(byte)0xed,(byte)0xfb,(byte)
    0x43,(byte)0xc5,(byte)0x86,(byte)0x43,(byte)  0x4d,(byte)0xd7,(byte)0x9a,(byte)0x4d,(byte)  0x33,(byte)0x55,(byte)0x66,(byte)0x33,(byte)  0x85,(byte)0x94,(byte)0x11,(byte)0x85,(byte)
    0x45,(byte)0xcf,(byte)0x8a,(byte)0x45,(byte)  0xf9,(byte)0x10,(byte)0xe9,(byte)0xf9,(byte)  0x2,(byte)0x6,(byte)0x4,(byte)0x2,(byte)      0x7f,(byte)0x81,(byte)0xfe,(byte)0x7f,(byte)
    0x50,(byte)0xf0,(byte)0xa0,(byte)0x50,(byte)  0x3c,(byte)0x44,(byte)0x78,(byte)0x3c,(byte)  0x9f,(byte)0xba,(byte)0x25,(byte)0x9f,(byte)  0xa8,(byte)0xe3,(byte)0x4b,(byte)0xa8,(byte)
    0x51,(byte)0xf3,(byte)0xa2,(byte)0x51,(byte)  0xa3,(byte)0xfe,(byte)0x5d,(byte)0xa3,(byte)  0x40,(byte)0xc0,(byte)0x80,(byte)0x40,(byte)  0x8f,(byte)0x8a,(byte)0x5,(byte)0x8f,(byte)
    0x92,(byte)0xad,(byte)0x3f,(byte)0x92,(byte)  0x9d,(byte)0xbc,(byte)0x21,(byte)0x9d,(byte)  0x38,(byte)0x48,(byte)0x70,(byte)0x38,(byte)  0xf5,(byte)0x4,(byte)0xf1,(byte)0xf5,(byte)
    0xbc,(byte)0xdf,(byte)0x63,(byte)0xbc,(byte)  0xb6,(byte)0xc1,(byte)0x77,(byte)0xb6,(byte)  0xda,(byte)0x75,(byte)0xaf,(byte)0xda,(byte)  0x21,(byte)0x63,(byte)0x42,(byte)0x21,(byte)
    0x10,(byte)0x30,(byte)0x20,(byte)0x10,(byte)  0xff,(byte)0x1a,(byte)0xe5,(byte)0xff,(byte)  0xf3,(byte)0xe,(byte)0xfd,(byte)0xf3,(byte)   0xd2,(byte)0x6d,(byte)0xbf,(byte)0xd2,(byte)
    0xcd,(byte)0x4c,(byte)0x81,(byte)0xcd,(byte)  0xc,(byte)0x14,(byte)0x18,(byte)0xc,(byte)    0x13,(byte)0x35,(byte)0x26,(byte)0x13,(byte)  0xec,(byte)0x2f,(byte)0xc3,(byte)0xec,(byte)
    0x5f,(byte)0xe1,(byte)0xbe,(byte)0x5f,(byte)  0x97,(byte)0xa2,(byte)0x35,(byte)0x97,(byte)  0x44,(byte)0xcc,(byte)0x88,(byte)0x44,(byte)  0x17,(byte)0x39,(byte)0x2e,(byte)0x17,(byte)
    0xc4,(byte)0x57,(byte)0x93,(byte)0xc4,(byte)  0xa7,(byte)0xf2,(byte)0x55,(byte)0xa7,(byte)  0x7e,(byte)0x82,(byte)0xfc,(byte)0x7e,(byte)  0x3d,(byte)0x47,(byte)0x7a,(byte)0x3d,(byte)
    0x64,(byte)0xac,(byte)0xc8,(byte)0x64,(byte)  0x5d,(byte)0xe7,(byte)0xba,(byte)0x5d,(byte)  0x19,(byte)0x2b,(byte)0x32,(byte)0x19,(byte)  0x73,(byte)0x95,(byte)0xe6,(byte)0x73,(byte)
    0x60,(byte)0xa0,(byte)0xc0,(byte)0x60,(byte)  0x81,(byte)0x98,(byte)0x19,(byte)0x81,(byte)  0x4f,(byte)0xd1,(byte)0x9e,(byte)0x4f,(byte)  0xdc,(byte)0x7f,(byte)0xa3,(byte)0xdc,(byte)
    0x22,(byte)0x66,(byte)0x44,(byte)0x22,(byte)  0x2a,(byte)0x7e,(byte)0x54,(byte)0x2a,(byte)  0x90,(byte)0xab,(byte)0x3b,(byte)0x90,(byte)  0x88,(byte)0x83,(byte)0xb,(byte)0x88,(byte)
    0x46,(byte)0xca,(byte)0x8c,(byte)0x46,(byte)  0xee,(byte)0x29,(byte)0xc7,(byte)0xee,(byte)  0xb8,(byte)0xd3,(byte)0x6b,(byte)0xb8,(byte)  0x14,(byte)0x3c,(byte)0x28,(byte)0x14,(byte)
    0xde,(byte)0x79,(byte)0xa7,(byte)0xde,(byte)  0x5e,(byte)0xe2,(byte)0xbc,(byte)0x5e,(byte)  0xb,(byte)0x1d,(byte)0x16,(byte)0xb,(byte)    0xdb,(byte)0x76,(byte)0xad,(byte)0xdb,(byte)
    0xe0,(byte)0x3b,(byte)0xdb,(byte)0xe0,(byte)  0x32,(byte)0x56,(byte)0x64,(byte)0x32,(byte)  0x3a,(byte)0x4e,(byte)0x74,(byte)0x3a,(byte)  0xa,(byte)0x1e,(byte)0x14,(byte)0xa,(byte)
    0x49,(byte)0xdb,(byte)0x92,(byte)0x49,(byte)  0x6,(byte)0xa,(byte)0xc,(byte)0x6,(byte)      0x24,(byte)0x6c,(byte)0x48,(byte)0x24,(byte)  0x5c,(byte)0xe4,(byte)0xb8,(byte)0x5c,(byte)
    0xc2,(byte)0x5d,(byte)0x9f,(byte)0xc2,(byte)  0xd3,(byte)0x6e,(byte)0xbd,(byte)0xd3,(byte)  0xac,(byte)0xef,(byte)0x43,(byte)0xac,(byte)  0x62,(byte)0xa6,(byte)0xc4,(byte)0x62,(byte)
    0x91,(byte)0xa8,(byte)0x39,(byte)0x91,(byte)  0x95,(byte)0xa4,(byte)0x31,(byte)0x95,(byte)  0xe4,(byte)0x37,(byte)0xd3,(byte)0xe4,(byte)  0x79,(byte)0x8b,(byte)0xf2,(byte)0x79,(byte)
    0xe7,(byte)0x32,(byte)0xd5,(byte)0xe7,(byte)  0xc8,(byte)0x43,(byte)0x8b,(byte)0xc8,(byte)  0x37,(byte)0x59,(byte)0x6e,(byte)0x37,(byte)  0x6d,(byte)0xb7,(byte)0xda,(byte)0x6d,(byte)
    0x8d,(byte)0x8c,(byte)0x1,(byte)0x8d,(byte)   0xd5,(byte)0x64,(byte)0xb1,(byte)0xd5,(byte)  0x4e,(byte)0xd2,(byte)0x9c,(byte)0x4e,(byte)  0xa9,(byte)0xe0,(byte)0x49,(byte)0xa9,(byte)
    0x6c,(byte)0xb4,(byte)0xd8,(byte)0x6c,(byte)  0x56,(byte)0xfa,(byte)0xac,(byte)0x56,(byte)  0xf4,(byte)0x7,(byte)0xf3,(byte)0xf4,(byte)   0xea,(byte)0x25,(byte)0xcf,(byte)0xea,(byte)
    0x65,(byte)0xaf,(byte)0xca,(byte)0x65,(byte)  0x7a,(byte)0x8e,(byte)0xf4,(byte)0x7a,(byte)  0xae,(byte)0xe9,(byte)0x47,(byte)0xae,(byte)  0x8,(byte)0x18,(byte)0x10,(byte)0x8,(byte)
    0xba,(byte)0xd5,(byte)0x6f,(byte)0xba,(byte)  0x78,(byte)0x88,(byte)0xf0,(byte)0x78,(byte)  0x25,(byte)0x6f,(byte)0x4a,(byte)0x25,(byte)  0x2e,(byte)0x72,(byte)0x5c,(byte)0x2e,(byte)
    0x1c,(byte)0x24,(byte)0x38,(byte)0x1c,(byte)  0xa6,(byte)0xf1,(byte)0x57,(byte)0xa6,(byte)  0xb4,(byte)0xc7,(byte)0x73,(byte)0xb4,(byte)  0xc6,(byte)0x51,(byte)0x97,(byte)0xc6,(byte)
    0xe8,(byte)0x23,(byte)0xcb,(byte)0xe8,(byte)  0xdd,(byte)0x7c,(byte)0xa1,(byte)0xdd,(byte)  0x74,(byte)0x9c,(byte)0xe8,(byte)0x74,(byte)  0x1f,(byte)0x21,(byte)0x3e,(byte)0x1f,(byte)
    0x4b,(byte)0xdd,(byte)0x96,(byte)0x4b,(byte)  0xbd,(byte)0xdc,(byte)0x61,(byte)0xbd,(byte)  0x8b,(byte)0x86,(byte)0xd,(byte)0x8b,(byte)   0x8a,(byte)0x85,(byte)0xf,(byte)0x8a,(byte)
    0x70,(byte)0x90,(byte)0xe0,(byte)0x70,(byte)  0x3e,(byte)0x42,(byte)0x7c,(byte)0x3e,(byte)  0xb5,(byte)0xc4,(byte)0x71,(byte)0xb5,(byte)  0x66,(byte)0xaa,(byte)0xcc,(byte)0x66,(byte)
    0x48,(byte)0xd8,(byte)0x90,(byte)0x48,(byte)  0x3,(byte)0x5,(byte)0x6,(byte)0x3,(byte)      0xf6,(byte)0x1,(byte)0xf7,(byte)0xf6,(byte)   0xe,(byte)0x12,(byte)0x1c,(byte)0xe,(byte)
    0x61,(byte)0xa3,(byte)0xc2,(byte)0x61,(byte)  0x35,(byte)0x5f,(byte)0x6a,(byte)0x35,(byte)  0x57,(byte)0xf9,(byte)0xae,(byte)0x57,(byte)  0xb9,(byte)0xd0,(byte)0x69,(byte)0xb9,(byte)
    0x86,(byte)0x91,(byte)0x17,(byte)0x86,(byte)  0xc1,(byte)0x58,(byte)0x99,(byte)0xc1,(byte)  0x1d,(byte)0x27,(byte)0x3a,(byte)0x1d,(byte)  0x9e,(byte)0xb9,(byte)0x27,(byte)0x9e,(byte)
    0xe1,(byte)0x38,(byte)0xd9,(byte)0xe1,(byte)  0xf8,(byte)0x13,(byte)0xeb,(byte)0xf8,(byte)  0x98,(byte)0xb3,(byte)0x2b,(byte)0x98,(byte)  0x11,(byte)0x33,(byte)0x22,(byte)0x11,(byte)
    0x69,(byte)0xbb,(byte)0xd2,(byte)0x69,(byte)  0xd9,(byte)0x70,(byte)0xa9,(byte)0xd9,(byte)  0x8e,(byte)0x89,(byte)0x7,(byte)0x8e,(byte)   0x94,(byte)0xa7,(byte)0x33,(byte)0x94,(byte)
    0x9b,(byte)0xb6,(byte)0x2d,(byte)0x9b,(byte)  0x1e,(byte)0x22,(byte)0x3c,(byte)0x1e,(byte)  0x87,(byte)0x92,(byte)0x15,(byte)0x87,(byte)  0xe9,(byte)0x20,(byte)0xc9,(byte)0xe9,(byte)
    0xce,(byte)0x49,(byte)0x87,(byte)0xce,(byte)  0x55,(byte)0xff,(byte)0xaa,(byte)0x55,(byte)  0x28,(byte)0x78,(byte)0x50,(byte)0x28,(byte)  0xdf,(byte)0x7a,(byte)0xa5,(byte)0xdf,(byte)
    0x8c,(byte)0x8f,(byte)0x3,(byte)0x8c,(byte)   0xa1,(byte)0xf8,(byte)0x59,(byte)0xa1,(byte)  0x89,(byte)0x80,(byte)0x9,(byte)0x89,(byte)   0xd,(byte)0x17,(byte)0x1a,(byte)0xd,(byte)
    0xbf,(byte)0xda,(byte)0x65,(byte)0xbf,(byte)  0xe6,(byte)0x31,(byte)0xd7,(byte)0xe6,(byte)  0x42,(byte)0xc6,(byte)0x84,(byte)0x42,(byte)  0x68,(byte)0xb8,(byte)0xd0,(byte)0x68,(byte)
    0x41,(byte)0xc3,(byte)0x82,(byte)0x41,(byte)  0x99,(byte)0xb0,(byte)0x29,(byte)0x99,(byte)  0x2d,(byte)0x77,(byte)0x5a,(byte)0x2d,(byte)  0xf,(byte)0x11,(byte)0x1e,(byte)0xf,(byte)
    0xb0,(byte)0xcb,(byte)0x7b,(byte)0xb0,(byte)  0x54,(byte)0xfc,(byte)0xa8,(byte)0x54,(byte)  0xbb,(byte)0xd6,(byte)0x6d,(byte)0xbb,(byte)  0x16,(byte)0x3a,(byte)0x2c,(byte)0x16};
    
    
    private final static byte[] TE3 = {
    (byte)0x63,(byte)0x63,(byte)0xa5,(byte)0xc6,(byte)  0x7c,(byte)0x7c,(byte)0x84,(byte)0xf8,(byte)  0x77,(byte)0x77,(byte)0x99,(byte)0xee,(byte)  0x7b,(byte)0x7b,(byte)0x8d,(byte)0xf6,(byte)
    0xf2,(byte)0xf2,(byte)0xd,(byte)0xff,(byte)   0x6b,(byte)0x6b,(byte)0xbd,(byte)0xd6,(byte)  0x6f,(byte)0x6f,(byte)0xb1,(byte)0xde,(byte)  0xc5,(byte)0xc5,(byte)0x54,(byte)0x91,(byte)
    0x30,(byte)0x30,(byte)0x50,(byte)0x60,(byte)  0x1,(byte)0x1,(byte)0x3,(byte)0x2,(byte)      0x67,(byte)0x67,(byte)0xa9,(byte)0xce,(byte)  0x2b,(byte)0x2b,(byte)0x7d,(byte)0x56,(byte)
    0xfe,(byte)0xfe,(byte)0x19,(byte)0xe7,(byte)  0xd7,(byte)0xd7,(byte)0x62,(byte)0xb5,(byte)  0xab,(byte)0xab,(byte)0xe6,(byte)0x4d,(byte)  0x76,(byte)0x76,(byte)0x9a,(byte)0xec,(byte)
    0xca,(byte)0xca,(byte)0x45,(byte)0x8f,(byte)  0x82,(byte)0x82,(byte)0x9d,(byte)0x1f,(byte)  0xc9,(byte)0xc9,(byte)0x40,(byte)0x89,(byte)  0x7d,(byte)0x7d,(byte)0x87,(byte)0xfa,(byte)
    0xfa,(byte)0xfa,(byte)0x15,(byte)0xef,(byte)  0x59,(byte)0x59,(byte)0xeb,(byte)0xb2,(byte)  0x47,(byte)0x47,(byte)0xc9,(byte)0x8e,(byte)  0xf0,(byte)0xf0,(byte)0xb,(byte)0xfb,(byte)
    0xad,(byte)0xad,(byte)0xec,(byte)0x41,(byte)  0xd4,(byte)0xd4,(byte)0x67,(byte)0xb3,(byte)  0xa2,(byte)0xa2,(byte)0xfd,(byte)0x5f,(byte)  0xaf,(byte)0xaf,(byte)0xea,(byte)0x45,(byte)
    0x9c,(byte)0x9c,(byte)0xbf,(byte)0x23,(byte)  0xa4,(byte)0xa4,(byte)0xf7,(byte)0x53,(byte)  0x72,(byte)0x72,(byte)0x96,(byte)0xe4,(byte)  0xc0,(byte)0xc0,(byte)0x5b,(byte)0x9b,(byte)
    0xb7,(byte)0xb7,(byte)0xc2,(byte)0x75,(byte)  0xfd,(byte)0xfd,(byte)0x1c,(byte)0xe1,(byte)  0x93,(byte)0x93,(byte)0xae,(byte)0x3d,(byte)  0x26,(byte)0x26,(byte)0x6a,(byte)0x4c,(byte)
    0x36,(byte)0x36,(byte)0x5a,(byte)0x6c,(byte)  0x3f,(byte)0x3f,(byte)0x41,(byte)0x7e,(byte)  0xf7,(byte)0xf7,(byte)0x2,(byte)0xf5,(byte)   0xcc,(byte)0xcc,(byte)0x4f,(byte)0x83,(byte)
    0x34,(byte)0x34,(byte)0x5c,(byte)0x68,(byte)  0xa5,(byte)0xa5,(byte)0xf4,(byte)0x51,(byte)  0xe5,(byte)0xe5,(byte)0x34,(byte)0xd1,(byte)  0xf1,(byte)0xf1,(byte)0x8,(byte)0xf9,(byte)
    0x71,(byte)0x71,(byte)0x93,(byte)0xe2,(byte)  0xd8,(byte)0xd8,(byte)0x73,(byte)0xab,(byte)  0x31,(byte)0x31,(byte)0x53,(byte)0x62,(byte)  0x15,(byte)0x15,(byte)0x3f,(byte)0x2a,(byte)
    0x4,(byte)0x4,(byte)0xc,(byte)0x8,(byte)      0xc7,(byte)0xc7,(byte)0x52,(byte)0x95,(byte)  0x23,(byte)0x23,(byte)0x65,(byte)0x46,(byte)  0xc3,(byte)0xc3,(byte)0x5e,(byte)0x9d,(byte)
    0x18,(byte)0x18,(byte)0x28,(byte)0x30,(byte)  0x96,(byte)0x96,(byte)0xa1,(byte)0x37,(byte)  0x5,(byte)0x5,(byte)0xf,(byte)0xa,(byte)      0x9a,(byte)0x9a,(byte)0xb5,(byte)0x2f,(byte)
    0x7,(byte)0x7,(byte)0x9,(byte)0xe,(byte)      0x12,(byte)0x12,(byte)0x36,(byte)0x24,(byte)  0x80,(byte)0x80,(byte)0x9b,(byte)0x1b,(byte)  0xe2,(byte)0xe2,(byte)0x3d,(byte)0xdf,(byte)
    0xeb,(byte)0xeb,(byte)0x26,(byte)0xcd,(byte)  0x27,(byte)0x27,(byte)0x69,(byte)0x4e,(byte)  0xb2,(byte)0xb2,(byte)0xcd,(byte)0x7f,(byte)  0x75,(byte)0x75,(byte)0x9f,(byte)0xea,(byte)
    0x9,(byte)0x9,(byte)0x1b,(byte)0x12,(byte)    0x83,(byte)0x83,(byte)0x9e,(byte)0x1d,(byte)  0x2c,(byte)0x2c,(byte)0x74,(byte)0x58,(byte)  0x1a,(byte)0x1a,(byte)0x2e,(byte)0x34,(byte)
    0x1b,(byte)0x1b,(byte)0x2d,(byte)0x36,(byte)  0x6e,(byte)0x6e,(byte)0xb2,(byte)0xdc,(byte)  0x5a,(byte)0x5a,(byte)0xee,(byte)0xb4,(byte)  0xa0,(byte)0xa0,(byte)0xfb,(byte)0x5b,(byte)
    0x52,(byte)0x52,(byte)0xf6,(byte)0xa4,(byte)  0x3b,(byte)0x3b,(byte)0x4d,(byte)0x76,(byte)  0xd6,(byte)0xd6,(byte)0x61,(byte)0xb7,(byte)  0xb3,(byte)0xb3,(byte)0xce,(byte)0x7d,(byte)
    0x29,(byte)0x29,(byte)0x7b,(byte)0x52,(byte)  0xe3,(byte)0xe3,(byte)0x3e,(byte)0xdd,(byte)  0x2f,(byte)0x2f,(byte)0x71,(byte)0x5e,(byte)  0x84,(byte)0x84,(byte)0x97,(byte)0x13,(byte)
    0x53,(byte)0x53,(byte)0xf5,(byte)0xa6,(byte)  0xd1,(byte)0xd1,(byte)0x68,(byte)0xb9,(byte)  0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)      0xed,(byte)0xed,(byte)0x2c,(byte)0xc1,(byte)
    0x20,(byte)0x20,(byte)0x60,(byte)0x40,(byte)  0xfc,(byte)0xfc,(byte)0x1f,(byte)0xe3,(byte)  0xb1,(byte)0xb1,(byte)0xc8,(byte)0x79,(byte)  0x5b,(byte)0x5b,(byte)0xed,(byte)0xb6,(byte)
    0x6a,(byte)0x6a,(byte)0xbe,(byte)0xd4,(byte)  0xcb,(byte)0xcb,(byte)0x46,(byte)0x8d,(byte)  0xbe,(byte)0xbe,(byte)0xd9,(byte)0x67,(byte)  0x39,(byte)0x39,(byte)0x4b,(byte)0x72,(byte)
    0x4a,(byte)0x4a,(byte)0xde,(byte)0x94,(byte)  0x4c,(byte)0x4c,(byte)0xd4,(byte)0x98,(byte)  0x58,(byte)0x58,(byte)0xe8,(byte)0xb0,(byte)  0xcf,(byte)0xcf,(byte)0x4a,(byte)0x85,(byte)
    0xd0,(byte)0xd0,(byte)0x6b,(byte)0xbb,(byte)  0xef,(byte)0xef,(byte)0x2a,(byte)0xc5,(byte)  0xaa,(byte)0xaa,(byte)0xe5,(byte)0x4f,(byte)  0xfb,(byte)0xfb,(byte)0x16,(byte)0xed,(byte)
    0x43,(byte)0x43,(byte)0xc5,(byte)0x86,(byte)  0x4d,(byte)0x4d,(byte)0xd7,(byte)0x9a,(byte)  0x33,(byte)0x33,(byte)0x55,(byte)0x66,(byte)  0x85,(byte)0x85,(byte)0x94,(byte)0x11,(byte)
    0x45,(byte)0x45,(byte)0xcf,(byte)0x8a,(byte)  0xf9,(byte)0xf9,(byte)0x10,(byte)0xe9,(byte)  0x2,(byte)0x2,(byte)0x6,(byte)0x4,(byte)      0x7f,(byte)0x7f,(byte)0x81,(byte)0xfe,(byte)
    0x50,(byte)0x50,(byte)0xf0,(byte)0xa0,(byte)  0x3c,(byte)0x3c,(byte)0x44,(byte)0x78,(byte)  0x9f,(byte)0x9f,(byte)0xba,(byte)0x25,(byte)  0xa8,(byte)0xa8,(byte)0xe3,(byte)0x4b,(byte)
    0x51,(byte)0x51,(byte)0xf3,(byte)0xa2,(byte)  0xa3,(byte)0xa3,(byte)0xfe,(byte)0x5d,(byte)  0x40,(byte)0x40,(byte)0xc0,(byte)0x80,(byte)  0x8f,(byte)0x8f,(byte)0x8a,(byte)0x5,(byte)
    0x92,(byte)0x92,(byte)0xad,(byte)0x3f,(byte)  0x9d,(byte)0x9d,(byte)0xbc,(byte)0x21,(byte)  0x38,(byte)0x38,(byte)0x48,(byte)0x70,(byte)  0xf5,(byte)0xf5,(byte)0x4,(byte)0xf1,(byte)
    0xbc,(byte)0xbc,(byte)0xdf,(byte)0x63,(byte)  0xb6,(byte)0xb6,(byte)0xc1,(byte)0x77,(byte)  0xda,(byte)0xda,(byte)0x75,(byte)0xaf,(byte)  0x21,(byte)0x21,(byte)0x63,(byte)0x42,(byte)
    0x10,(byte)0x10,(byte)0x30,(byte)0x20,(byte)  0xff,(byte)0xff,(byte)0x1a,(byte)0xe5,(byte)  0xf3,(byte)0xf3,(byte)0xe,(byte)0xfd,(byte)   0xd2,(byte)0xd2,(byte)0x6d,(byte)0xbf,(byte)
    0xcd,(byte)0xcd,(byte)0x4c,(byte)0x81,(byte)  0xc,(byte)0xc,(byte)0x14,(byte)0x18,(byte)    0x13,(byte)0x13,(byte)0x35,(byte)0x26,(byte)  0xec,(byte)0xec,(byte)0x2f,(byte)0xc3,(byte)
    0x5f,(byte)0x5f,(byte)0xe1,(byte)0xbe,(byte)  0x97,(byte)0x97,(byte)0xa2,(byte)0x35,(byte)  0x44,(byte)0x44,(byte)0xcc,(byte)0x88,(byte)  0x17,(byte)0x17,(byte)0x39,(byte)0x2e,(byte)
    0xc4,(byte)0xc4,(byte)0x57,(byte)0x93,(byte)  0xa7,(byte)0xa7,(byte)0xf2,(byte)0x55,(byte)  0x7e,(byte)0x7e,(byte)0x82,(byte)0xfc,(byte)  0x3d,(byte)0x3d,(byte)0x47,(byte)0x7a,(byte)
    0x64,(byte)0x64,(byte)0xac,(byte)0xc8,(byte)  0x5d,(byte)0x5d,(byte)0xe7,(byte)0xba,(byte)  0x19,(byte)0x19,(byte)0x2b,(byte)0x32,(byte)  0x73,(byte)0x73,(byte)0x95,(byte)0xe6,(byte)
    0x60,(byte)0x60,(byte)0xa0,(byte)0xc0,(byte)  0x81,(byte)0x81,(byte)0x98,(byte)0x19,(byte)  0x4f,(byte)0x4f,(byte)0xd1,(byte)0x9e,(byte)  0xdc,(byte)0xdc,(byte)0x7f,(byte)0xa3,(byte)
    0x22,(byte)0x22,(byte)0x66,(byte)0x44,(byte)  0x2a,(byte)0x2a,(byte)0x7e,(byte)0x54,(byte)  0x90,(byte)0x90,(byte)0xab,(byte)0x3b,(byte)  0x88,(byte)0x88,(byte)0x83,(byte)0xb,(byte)
    0x46,(byte)0x46,(byte)0xca,(byte)0x8c,(byte)  0xee,(byte)0xee,(byte)0x29,(byte)0xc7,(byte)  0xb8,(byte)0xb8,(byte)0xd3,(byte)0x6b,(byte)  0x14,(byte)0x14,(byte)0x3c,(byte)0x28,(byte)
    0xde,(byte)0xde,(byte)0x79,(byte)0xa7,(byte)  0x5e,(byte)0x5e,(byte)0xe2,(byte)0xbc,(byte)  0xb,(byte)0xb,(byte)0x1d,(byte)0x16,(byte)    0xdb,(byte)0xdb,(byte)0x76,(byte)0xad,(byte)
    0xe0,(byte)0xe0,(byte)0x3b,(byte)0xdb,(byte)  0x32,(byte)0x32,(byte)0x56,(byte)0x64,(byte)  0x3a,(byte)0x3a,(byte)0x4e,(byte)0x74,(byte)  0xa,(byte)0xa,(byte)0x1e,(byte)0x14,(byte)
    0x49,(byte)0x49,(byte)0xdb,(byte)0x92,(byte)  0x6,(byte)0x6,(byte)0xa,(byte)0xc,(byte)      0x24,(byte)0x24,(byte)0x6c,(byte)0x48,(byte)  0x5c,(byte)0x5c,(byte)0xe4,(byte)0xb8,(byte)
    0xc2,(byte)0xc2,(byte)0x5d,(byte)0x9f,(byte)  0xd3,(byte)0xd3,(byte)0x6e,(byte)0xbd,(byte)  0xac,(byte)0xac,(byte)0xef,(byte)0x43,(byte)  0x62,(byte)0x62,(byte)0xa6,(byte)0xc4,(byte)
    0x91,(byte)0x91,(byte)0xa8,(byte)0x39,(byte)  0x95,(byte)0x95,(byte)0xa4,(byte)0x31,(byte)  0xe4,(byte)0xe4,(byte)0x37,(byte)0xd3,(byte)  0x79,(byte)0x79,(byte)0x8b,(byte)0xf2,(byte)
    0xe7,(byte)0xe7,(byte)0x32,(byte)0xd5,(byte)  0xc8,(byte)0xc8,(byte)0x43,(byte)0x8b,(byte)  0x37,(byte)0x37,(byte)0x59,(byte)0x6e,(byte)  0x6d,(byte)0x6d,(byte)0xb7,(byte)0xda,(byte)
    0x8d,(byte)0x8d,(byte)0x8c,(byte)0x1,(byte)   0xd5,(byte)0xd5,(byte)0x64,(byte)0xb1,(byte)  0x4e,(byte)0x4e,(byte)0xd2,(byte)0x9c,(byte)  0xa9,(byte)0xa9,(byte)0xe0,(byte)0x49,(byte)
    0x6c,(byte)0x6c,(byte)0xb4,(byte)0xd8,(byte)  0x56,(byte)0x56,(byte)0xfa,(byte)0xac,(byte)  0xf4,(byte)0xf4,(byte)0x7,(byte)0xf3,(byte)   0xea,(byte)0xea,(byte)0x25,(byte)0xcf,(byte)
    0x65,(byte)0x65,(byte)0xaf,(byte)0xca,(byte)  0x7a,(byte)0x7a,(byte)0x8e,(byte)0xf4,(byte)  0xae,(byte)0xae,(byte)0xe9,(byte)0x47,(byte)  0x8,(byte)0x8,(byte)0x18,(byte)0x10,(byte)
    0xba,(byte)0xba,(byte)0xd5,(byte)0x6f,(byte)  0x78,(byte)0x78,(byte)0x88,(byte)0xf0,(byte)  0x25,(byte)0x25,(byte)0x6f,(byte)0x4a,(byte)  0x2e,(byte)0x2e,(byte)0x72,(byte)0x5c,(byte)
    0x1c,(byte)0x1c,(byte)0x24,(byte)0x38,(byte)  0xa6,(byte)0xa6,(byte)0xf1,(byte)0x57,(byte)  0xb4,(byte)0xb4,(byte)0xc7,(byte)0x73,(byte)  0xc6,(byte)0xc6,(byte)0x51,(byte)0x97,(byte)
    0xe8,(byte)0xe8,(byte)0x23,(byte)0xcb,(byte)  0xdd,(byte)0xdd,(byte)0x7c,(byte)0xa1,(byte)  0x74,(byte)0x74,(byte)0x9c,(byte)0xe8,(byte)  0x1f,(byte)0x1f,(byte)0x21,(byte)0x3e,(byte)
    0x4b,(byte)0x4b,(byte)0xdd,(byte)0x96,(byte)  0xbd,(byte)0xbd,(byte)0xdc,(byte)0x61,(byte)  0x8b,(byte)0x8b,(byte)0x86,(byte)0xd,(byte)   0x8a,(byte)0x8a,(byte)0x85,(byte)0xf,(byte)
    0x70,(byte)0x70,(byte)0x90,(byte)0xe0,(byte)  0x3e,(byte)0x3e,(byte)0x42,(byte)0x7c,(byte)  0xb5,(byte)0xb5,(byte)0xc4,(byte)0x71,(byte)  0x66,(byte)0x66,(byte)0xaa,(byte)0xcc,(byte)
    0x48,(byte)0x48,(byte)0xd8,(byte)0x90,(byte)  0x3,(byte)0x3,(byte)0x5,(byte)0x6,(byte)      0xf6,(byte)0xf6,(byte)0x1,(byte)0xf7,(byte)   0xe,(byte)0xe,(byte)0x12,(byte)0x1c,(byte)
    0x61,(byte)0x61,(byte)0xa3,(byte)0xc2,(byte)  0x35,(byte)0x35,(byte)0x5f,(byte)0x6a,(byte)  0x57,(byte)0x57,(byte)0xf9,(byte)0xae,(byte)  0xb9,(byte)0xb9,(byte)0xd0,(byte)0x69,(byte)
    0x86,(byte)0x86,(byte)0x91,(byte)0x17,(byte)  0xc1,(byte)0xc1,(byte)0x58,(byte)0x99,(byte)  0x1d,(byte)0x1d,(byte)0x27,(byte)0x3a,(byte)  0x9e,(byte)0x9e,(byte)0xb9,(byte)0x27,(byte)
    0xe1,(byte)0xe1,(byte)0x38,(byte)0xd9,(byte)  0xf8,(byte)0xf8,(byte)0x13,(byte)0xeb,(byte)  0x98,(byte)0x98,(byte)0xb3,(byte)0x2b,(byte)  0x11,(byte)0x11,(byte)0x33,(byte)0x22,(byte)
    0x69,(byte)0x69,(byte)0xbb,(byte)0xd2,(byte)  0xd9,(byte)0xd9,(byte)0x70,(byte)0xa9,(byte)  0x8e,(byte)0x8e,(byte)0x89,(byte)0x7,(byte)   0x94,(byte)0x94,(byte)0xa7,(byte)0x33,(byte)
    0x9b,(byte)0x9b,(byte)0xb6,(byte)0x2d,(byte)  0x1e,(byte)0x1e,(byte)0x22,(byte)0x3c,(byte)  0x87,(byte)0x87,(byte)0x92,(byte)0x15,(byte)  0xe9,(byte)0xe9,(byte)0x20,(byte)0xc9,(byte)
    0xce,(byte)0xce,(byte)0x49,(byte)0x87,(byte)  0x55,(byte)0x55,(byte)0xff,(byte)0xaa,(byte)  0x28,(byte)0x28,(byte)0x78,(byte)0x50,(byte)  0xdf,(byte)0xdf,(byte)0x7a,(byte)0xa5,(byte)
    0x8c,(byte)0x8c,(byte)0x8f,(byte)0x3,(byte)   0xa1,(byte)0xa1,(byte)0xf8,(byte)0x59,(byte)  0x89,(byte)0x89,(byte)0x80,(byte)0x9,(byte)   0xd,(byte)0xd,(byte)0x17,(byte)0x1a,(byte)
    0xbf,(byte)0xbf,(byte)0xda,(byte)0x65,(byte)  0xe6,(byte)0xe6,(byte)0x31,(byte)0xd7,(byte)  0x42,(byte)0x42,(byte)0xc6,(byte)0x84,(byte)  0x68,(byte)0x68,(byte)0xb8,(byte)0xd0,(byte)
    0x41,(byte)0x41,(byte)0xc3,(byte)0x82,(byte)  0x99,(byte)0x99,(byte)0xb0,(byte)0x29,(byte)  0x2d,(byte)0x2d,(byte)0x77,(byte)0x5a,(byte)  0xf,(byte)0xf,(byte)0x11,(byte)0x1e,(byte)
    0xb0,(byte)0xb0,(byte)0xcb,(byte)0x7b,(byte)  0x54,(byte)0x54,(byte)0xfc,(byte)0xa8,(byte)  0xbb,(byte)0xbb,(byte)0xd6,(byte)0x6d,(byte)  0x16,(byte)0x16,(byte)0x3a,(byte)0x2c};
    
    
    public void AESROUND(byte[] out, byte[] in, byte[] rk) {
      out[0] = (byte)(TE0[(short)(4*((byte)( in[0] & (byte)(0x7F) ) + ((in[0] >>> 7) & (byte)0x01) * 128) )] ^ TE1[(short)(4*((byte)( in[5] & (byte)(0x7F) ) + ((in[5] >>> 7) & (byte)0x01) * 128) )] ^ TE2[(short)(4*((byte)( in[10] & (byte)(0x7F) ) + ((in[10] >>> 7) & (byte)0x01) * 128) )] ^ TE3[(short)(4*((byte)( in[15] & (byte)(0x7F) ) + ((in[15] >>> 7) & (byte)0x01) * 128) )] ^ rk[0]);
     
     out[1] = (byte)(TE0[(short)(4*((byte)( in[0] & (byte)(0x7F) ) + ((in[0] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE1[(short)(4*((byte)( in[5] & (byte)(0x7F) ) + ((in[5] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE2[(short)(4*((byte)( in[10] & (byte)(0x7F) ) + ((in[10] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE3[(short)(4*((byte)( in[15] & (byte)(0x7F) ) + ((in[15] >>> 7) & (byte)0x01) * 128) + 1)] ^ rk[1]);
     
     out[2] = (byte)(TE0[(short)(4*((byte)( in[0] & (byte)(0x7F) ) + ((in[0] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE1[(short)(4*((byte)( in[5] & (byte)(0x7F) ) + ((in[5] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE2[(short)(4*((byte)( in[10] & (byte)(0x7F) ) + ((in[10] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE3[(short)(4*((byte)( in[15] & (byte)(0x7F) ) + ((in[15] >>> 7) & (byte)0x01) * 128) + 2)] ^ rk[2]);
     
     out[3] = (byte)(TE0[(short)(4*((byte)( in[0] & (byte)(0x7F) ) + ((in[0] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE1[(short)(4*((byte)( in[5] & (byte)(0x7F) ) + ((in[5] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE2[(short)(4*((byte)( in[10] & (byte)(0x7F) ) + ((in[10] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE3[(short)(4*((byte)( in[15] & (byte)(0x7F) ) + ((in[15] >>> 7) & (byte)0x01) * 128) + 3)] ^ rk[3]);
     
     
     
     out[4] = (byte)(TE0[(short)(4*((byte)( in[4] & (byte)(0x7F) ) + ((in[4] >>> 7) & (byte)0x01) * 128))] ^ TE1[(short)(4*((byte)( in[9] & (byte)(0x7F) ) + ((in[9] >>> 7) & (byte)0x01) * 128))] ^ TE2[(short)(4*((byte)( in[14] & (byte)(0x7F) ) + ((in[14] >>> 7) & (byte)0x01) * 128))] ^ TE3[(short)(4*((byte)( in[3] & (byte)(0x7F) ) + ((in[3] >>> 7) & (byte)0x01) * 128))] ^ rk[4]);
     
     out[5] = (byte)(TE0[(short)(4*((byte)( in[4] & (byte)(0x7F) ) + ((in[4] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE1[(short)(4*((byte)( in[9] & (byte)(0x7F) ) + ((in[9] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE2[(short)(4*((byte)( in[14] & (byte)(0x7F) ) + ((in[14] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE3[(short)(4*((byte)( in[3] & (byte)(0x7F) ) + ((in[3] >>> 7) & (byte)0x01) * 128) + 1)] ^ rk[5]);
     
     out[6] = (byte)(TE0[(short)(4*((byte)( in[4] & (byte)(0x7F) ) + ((in[4] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE1[(short)(4*((byte)( in[9] & (byte)(0x7F) ) + ((in[9] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE2[(short)(4*((byte)( in[14] & (byte)(0x7F) ) + ((in[14] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE3[(short)(4*((byte)( in[3] & (byte)(0x7F) ) + ((in[3] >>> 7) & (byte)0x01) * 128) + 2)] ^ rk[6]);
     
     out[7] = (byte)(TE0[(short)(4*((byte)( in[4] & (byte)(0x7F) ) + ((in[4] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE1[(short)(4*((byte)( in[9] & (byte)(0x7F) ) + ((in[9] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE2[(short)(4*((byte)( in[14] & (byte)(0x7F) ) + ((in[14] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE3[(short)(4*((byte)( in[3] & (byte)(0x7F) ) + ((in[3] >>> 7) & (byte)0x01) * 128) + 3)] ^ rk[7]);
     
     
     
     out[8] = (byte)(TE0[(short)((byte)4*((byte)( in[8] & (byte)(0x7F) ) + ((in[8] >>> 7) & (byte)0x01) * 128) )] ^ TE1[(short)((byte)4*((byte)( in[13] & (byte)(0x7F) ) + ((in[13] >>> 7) & (byte)0x01) * 128) )] ^ TE2[(short)((byte)4*((byte)( in[2] & (byte)(0x7F) ) + ((in[2] >>> 7) & (byte)0x01) * 128) )] ^ TE3[(short)((byte)4*((byte)( in[7] & (byte)(0x7F) ) + ((in[7] >>> 7) & (byte)0x01) * 128) )] ^ rk[8]);
     
     out[9] = (byte)(TE0[(short)(4*((byte)( in[8] & (byte)(0x7F) ) + ((in[8] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE1[(short)(4*((byte)( in[13] & (byte)(0x7F) ) + ((in[13] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE2[(short)(4*((byte)( in[2] & (byte)(0x7F) ) + ((in[2] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE3[(short)(4*((byte)( in[7] & (byte)(0x7F) ) + ((in[7] >>> 7) & (byte)0x01) * 128) + 1)] ^ rk[9]);
     
     out[10] = (byte)(TE0[(short)(4*((byte)( in[8] & (byte)(0x7F) ) + ((in[8] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE1[(short)(4*((byte)( in[13] & (byte)(0x7F) ) + ((in[13] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE2[(short)(4*((byte)( in[2] & (byte)(0x7F) ) + ((in[2] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE3[(short)(4*((byte)( in[7] & (byte)(0x7F) ) + ((in[7] >>> 7) & (byte)0x01) * 128) + 2)] ^ rk[10]);
     
     out[11] = (byte)(TE0[(short)(4*((byte)( in[8] & (byte)(0x7F) ) + ((in[8] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE1[(short)(4*((byte)( in[13] & (byte)(0x7F) ) + ((in[13] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE2[(short)(4*((byte)( in[2] & (byte)(0x7F) ) + ((in[2] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE3[(short)(4*((byte)( in[7] & (byte)(0x7F) ) + ((in[7] >>> 7) & (byte)0x01) * 128) + 3)] ^ rk[11]);
     
     
     
     out[12] = (byte)(TE0[(short)(4*((byte)( in[12] & (byte)(0x7F) ) + ((in[12] >>> 7) & (byte)0x01) * 128))] ^ TE1[(short)(4*((byte)( in[1] & (byte)(0x7F) ) + ((in[1] >>> 7) & (byte)0x01) * 128))] ^ TE2[(short)(4*((byte)( in[6] & (byte)(0x7F) ) + ((in[6] >>> 7) & (byte)0x01) * 128))] ^ TE3[(short)(4*((byte)( in[11] & (byte)(0x7F) ) + ((in[11] >>> 7) & (byte)0x01) * 128))] ^ rk[12]);
     
     out[13] = (byte)(TE0[(short)(4*((byte)( in[12] & (byte)(0x7F) ) + ((in[12] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE1[(short)(4*((byte)( in[1] & (byte)(0x7F) ) + ((in[1] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE2[(short)(4*((byte)( in[6] & (byte)(0x7F) ) + ((in[6] >>> 7) & (byte)0x01) * 128) + 1)] ^ TE3[(short)(4*((byte)( in[11] & (byte)(0x7F) ) + ((in[11] >>> 7) & (byte)0x01) * 128) + 1)] ^ rk[13]);
     
     out[14] = (byte)(TE0[(short)(4*((byte)( in[12] & (byte)(0x7F) ) + ((in[12] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE1[(short)(4*((byte)( in[1] & (byte)(0x7F) ) + ((in[1] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE2[(short)(4*((byte)( in[6] & (byte)(0x7F) ) + ((in[6] >>> 7) & (byte)0x01) * 128) + 2)] ^ TE3[(short)(4*((byte)( in[11] & (byte)(0x7F) ) + ((in[11] >>> 7) & (byte)0x01) * 128) + 2)] ^ rk[14]);
     
     out[15] = (byte)(TE0[(short)(4*((byte)( in[12] & (byte)(0x7F) ) + ((in[12] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE1[(short)(4*((byte)( in[1] & (byte)(0x7F) ) + ((in[1] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE2[(short)(4*((byte)( in[6] & (byte)(0x7F) ) + ((in[6] >>> 7) & (byte)0x01) * 128) + 3)] ^ TE3[(short)(4*((byte)( in[11] & (byte)(0x7F) ) + ((in[11] >>> 7) & (byte)0x01) * 128) + 3)] ^ rk[15]);
     
     }
    
  
  public AegisCore(){
      state = JCSystem.makeTransientByteArray((short)80, JCSystem.CLEAR_ON_DESELECT);
      plaintextblock = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      ciphertextblock = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      //mac = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      //ekey = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      //tag = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      tempbuf = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      tempkey = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      tbblk = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      ptblk = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      ctblk = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
      tkblk = JCSystem.makeTransientByteArray(LEN, JCSystem.CLEAR_ON_DESELECT);
  }
  
  // The initialization state of AEGIS
  // The input to initialization is the 128-bit key; 128-bit IV;
  public byte AegisCoreInitialization(byte[] cipher, short cipherlen, byte[] message, short messagelen, byte[] authdata, short authdatalen, byte[] nsecret, byte[] npublic, byte[] key, short keylen){
      if(keylen != LEN){
          return KEY_ERROR;
      }
      userkey = key;
      klen = keylen;
      
      ct = cipher;
      ctlen = cipherlen;
      pt = message;
      ptlen = messagelen;
      ad = authdata;
      adlen = authdatalen;
      nonce = npublic;  // iv
      nlen = (short)nonce.length;  
      return SUCCESS;
  }
  
  /*public void changeEndianness(short startIndex, short endIndex, byte[] src) {
      byte temp;
      for(short k=startIndex; (short)(k+3)<endIndex; k=(short)(k+4)){
            temp = src[k];
            src[k] = src[(short)(k+3)];
            src[(short)(k+3)] = temp;
            temp = src[(short)(k+1)];
            src[(short)(k+1)] = src[(short)(k+2)];
            src[(short)(k+2)] = temp;
        }
  }*/
  
  public byte aegis128_initialization() {
      // populate state
      //Util.arrayCopyNonAtomic(userkey, (short)0, ekey, (short)0, LEN);
      Util.arrayCopyNonAtomic(nonce, (short)0, state, (short)0, LEN);
      //ISOException.throwIt((short)0x6666);
      Util.arrayCopyNonAtomic(constant, (short)16, state, (short)16, LEN);
      Util.arrayCopyNonAtomic(constant, (short)0, state, (short)32, LEN); 
      
      byte i;
      for(i=0; i<16; i++)  //XOR128
         state[(byte)(i+48)] = (byte)(userkey[i] ^ constant[i]);
      for(i=0; i<16; i++)
         state[(byte)(i+64)] = (byte)(userkey[i] ^ constant[(byte)(i+16)]);
      for(i=0; i<16; i++)
         state[i] = (byte)(state[i] ^ userkey[i]);
      for(i=0; i<16; i++)
         userkey[i] = (byte)(userkey[i] ^ nonce[i]);
      
      for (byte j = 0; j < 10; j++)  {
          //state update function
          stateUpdate();
          
          //xor msg with state[0]
          for(i=0; i<16; i++)
            userkey[i] = (byte)(userkey[i] ^ nonce[i]);
          for(i=0; i<16; i++)
            state[i] = (byte)(state[i] ^ userkey[i]);
      } 
      
      //System.out.println("state_init:");
      //System.out.println(AegisMain.bytesToHex(state));
      
      return SUCCESS;
  }
  
  public byte stateUpdate() {
      //state update function
      Util.arrayCopyNonAtomic(state, (short)64, tbblk, (short)0, LEN);
          
      Util.arrayCopyNonAtomic(state, (short)48, ptblk, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)64, tkblk, (short)0, LEN);
      //aes.AESROUND(ctblk, ptblk, tkblk);
      //ISOException.throwIt((short) 0x0006); //     430 ms (since start)
      AESROUND(ctblk, ptblk, tkblk);
      //ISOException.throwIt((short) 0x0007); //     26 ms
      Util.arrayCopyNonAtomic(ctblk, (short)0, state, (short)64, LEN);
          
      Util.arrayCopyNonAtomic(state, (short)32, ptblk, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)48, tkblk, (short)0, LEN);
      //aes.AESROUND(ctblk, ptblk, tkblk);
      AESROUND(ctblk, ptblk, tkblk);
      Util.arrayCopyNonAtomic(ctblk, (short)0, state, (short)48, LEN);
          
      Util.arrayCopyNonAtomic(state, (short)16, ptblk, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)32, tkblk, (short)0, LEN);
      //aes.AESROUND(ctblk, ptblk, tkblk);
      AESROUND(ctblk, ptblk, tkblk);
      Util.arrayCopyNonAtomic(ctblk, (short)0, state, (short)32, LEN);
          
      Util.arrayCopyNonAtomic(state, (short)0, ptblk, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)16, tkblk, (short)0, LEN);
      //aes.AESROUND(ctblk, ptblk, tkblk);
      AESROUND(ctblk, ptblk, tkblk);
      Util.arrayCopyNonAtomic(ctblk, (short)0, state, (short)16, LEN);
          
      Util.arrayCopyNonAtomic(tbblk, (short)0, ptblk, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)0, tkblk, (short)0, LEN);
      AESROUND(ctblk, ptblk, tkblk);
      //aes.AESROUND(ctblk, ptblk, tkblk);
      Util.arrayCopyNonAtomic(ctblk, (short)0, state, (short)0, LEN);
          
      return SUCCESS;
  }
  
  public byte aegis128_enc_aut_step(short j) {
      byte i;
      for(i=0; i<16; i++)  //AND128
         ciphertextblock[i] = (byte)(state[(byte)(i+32)] & state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+64)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ ad[(short)(j+i)]);
      
      //ISOException.throwIt((short) 0x0008); // 4833 ms (since start)
      //state update function
      stateUpdate();
      ISOException.throwIt((short) 0x0009); // 134 ms
      
      //message is used to update the state.
      for(i=0; i<16; i++)  //XOR128
         state[i] = (byte)(state[i] ^ ad[(short)(j+i)]);
      
      return SUCCESS;
  }
  
  public byte aegis128_enc_aut_step_partial() {
      byte i;
      for(i=0; i<16; i++)  //AND128
         ciphertextblock[i] = (byte)(state[(byte)(i+32)] & state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+64)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ plaintextblock[i]);
      
      //state update function
      stateUpdate();
      
      //message is used to update the state.
      for(i=0; i<16; i++)  //XOR128
         state[i] = (byte)(state[i] ^ plaintextblock[i]);
      
      return SUCCESS;
  }
  
  public byte aegis128_dec_aut_step_partial() {
      byte i;
      for(i=0; i<16; i++)  //AND128
         plaintextblock[i] = (byte)(state[(byte)(i+32)] & state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ state[(byte)(i+64)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ ciphertextblock[i]);
      
      //state update function
      stateUpdate();
      
      //message is used to update the state.
      for(i=0; i<16; i++)  //XOR128
         state[i] = (byte)(state[i] ^ plaintextblock[i]);
      
      return SUCCESS;
  }
  
  public byte aegis128_enc_aut_step_plaintext(short j) {
      byte i;
      for(i=0; i<16; i++)  //AND128
         ciphertextblock[i] = (byte)(state[(byte)(i+32)] & state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ state[(byte)(i+64)]);
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(ciphertextblock[i] ^ pt[(short)(j+i)]);
      //copy the ciphertext
      Util.arrayCopyNonAtomic(ciphertextblock, (short)0, ct, j, LEN);
      
      //state update function
      stateUpdate();
      
      //message is used to update the state.
      for(i=0; i<16; i++)  //XOR128
         state[i] = (byte)(state[i] ^ pt[(short)(j+i)]);
      
      return SUCCESS;
  }
  
  public byte aegis128_dec_aut_step_ciphertext(short j) {
      byte i;
      for(i=0; i<16; i++)  //AND128
         plaintextblock[i] = (byte)(state[(byte)(i+32)] & state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ state[(byte)(i+64)]);
      for(i=0; i<16; i++)  //XOR128
         plaintextblock[i] = (byte)(plaintextblock[i] ^ ct[(short)(j+i)]);
      //copy the ciphertext
      Util.arrayCopyNonAtomic(plaintextblock, (short)0, pt, j, LEN);
      
      //state update function
      stateUpdate();
      
      //message is used to update the state.
      for(i=0; i<16; i++)  //XOR128
         state[i] = (byte)(state[i] ^ pt[(short)(j+i)]);
      
      return SUCCESS;
  }
  
  public byte aegis128_tag_generation() {
      Util.arrayFillNonAtomic(plaintextblock, (short)0, LEN, (byte)0x00);
      Util.setShort(plaintextblock, (short)0, adlen);
      byte temp0 = plaintextblock[1];
      byte temp1 = plaintextblock[0];
      plaintextblock[0] = (byte)(temp0 << 3);
      plaintextblock[1] = (byte)( (byte)(temp1 << 3) | (byte)( (byte)(temp0 >>> 5) & (byte)0x07 ) );
      plaintextblock[2] = (byte)( (byte)(temp1 >>> 5) & (byte)0x07 );
      
      Util.setShort(plaintextblock, (short)8, ptlen);
      temp0 = plaintextblock[9];
      temp1 = plaintextblock[8];
      plaintextblock[8] = (byte)(temp0 << 3);
      plaintextblock[9] = (byte)( (byte)(temp1 << 3) | (byte)( (byte)(temp0 >>> 5) & (byte)0x07 ) );
      plaintextblock[10] = (byte)( (byte)(temp1 >>> 5) & (byte)0x07 );
      
      byte i;
      for(i=0; i<16; i++)  //XOR128
         ciphertextblock[i] = (byte)(plaintextblock[i] ^ state[(byte)(i+48)]);
      
      for (i = 0; i < 7; i++) {
          //state update function
          stateUpdate();
             
          //xor "msg" with state[0]
          for(byte kk=0; kk<16; kk++)  //XOR128
            state[kk] = (byte)(state[kk] ^ ciphertextblock[kk]);      
      }
      
      for(i=0; i<16; i++)  //XOR128
         state[(byte)(i+64)] = (byte)(state[(byte)(i+64)] ^ state[(byte)(i+48)]);
      for(i=0; i<16; i++)  //XOR128
         state[(byte)(i+64)] = (byte)(state[(byte)(i+64)] ^ state[(byte)(i+32)]);
      for(i=0; i<16; i++)  //XOR128
         state[(byte)(i+64)] = (byte)(state[(byte)(i+64)] ^ state[(byte)(i+16)]);
      for(i=0; i<16; i++)  //XOR128
         state[(byte)(i+64)] = (byte)(state[(byte)(i+64)] ^ state[i]);
      
      //in this program, the mac length is assumed to be multiple of bytes
      //Util.arrayCopyNonAtomic(state, (short)64, mac, (short)0, LEN);
      Util.arrayCopyNonAtomic(state, (short)64, ciphertextblock, (short)0, LEN);
      
      return SUCCESS;
  }
  
  
  public byte crypto_aead_encrypt() {
      short i=0;
      //ISOException.throwIt((short) 0x0001); //  104 ms (since start)
      // initialization state (80 byte array)
      aegis128_initialization();
      //ISOException.throwIt((short) 0x0002); //    4683 ms
      
      // process the associated data
      for (i = 0; (short)(i+16) <= adlen; i += 16) {
        aegis128_enc_aut_step(i);
      }
      
      //deal with the partial block of associated data
      //in this program, we assume that the message length is multiple of bytes.
      if (  (adlen & (byte)0xf) != 0 )  {
          Util.arrayFillNonAtomic(plaintextblock, (short)0, LEN, (byte)0x00);
          Util.arrayCopyNonAtomic(ad, i, plaintextblock, (short)0, (byte)(adlen & (byte)0xf));
          aegis128_enc_aut_step_partial();
      }
      //ISOException.throwIt((short) 0x0003); //    383 ms
      
      //encrypt the plaintext
      for (i = 0; (short)(i+16) <= ptlen; i += 16) {
            aegis128_enc_aut_step_plaintext(i);
      }
      
      // Deal with the partial block
      // In this program, we assume that the message length is multiple of bytes.
      if (  (ptlen & (byte)0xf) != 0 )  {
          Util.arrayFillNonAtomic(plaintextblock, (short)0, LEN, (byte)0x00);
          Util.arrayCopyNonAtomic(pt, i, plaintextblock, (short)0, (byte)(ptlen & (byte)0xf));
          aegis128_enc_aut_step_partial();
          //copy the ciphertext
          Util.arrayCopyNonAtomic(ciphertextblock, (short)0, ct, i, (byte)(ptlen & (byte)0xf));
          
      }
      //ISOException.throwIt((short) 0x0004); //  1601 ms
      
      //finalization stage, we assume that the tag length is a multiple of bytes
      aegis128_tag_generation();
      // set ciphertext length
      ctlen = (short)(ptlen + 16);
      //Util.arrayCopyNonAtomic(mac, (short)0, ct, ptlen, LEN);
      Util.arrayCopyNonAtomic(ciphertextblock, (short)0, ct, ptlen, LEN);
      //ISOException.throwIt((short) 0x0005); //  1118 ms

      
      //System.out.println("mac:");
      //System.out.println(AegisMain.bytesToHex(mac));
      //System.out.println("state_final:");
      //System.out.println(AegisMain.bytesToHex(state)); */
      
      return SUCCESS;
  }
  
  public byte crypto_aead_decrypt() {
      short i=0;
      byte check = 0;
      
      if(ctlen < (short)16) return -1;
      
      // initialization state (80 byte array)
      aegis128_initialization();
      
      // process the associated data
      for (i = 0; (short)(i+16) <= adlen; i += 16) {
        aegis128_enc_aut_step(i);
      } 
      
      //deal with the partial block of associated data
      //in this program, we assume that the message length is multiple of bytes.
      if (  (adlen & (byte)0xf) != 0 )  {
          Util.arrayFillNonAtomic(plaintextblock, (short)0, LEN, (byte)0x00);
          Util.arrayCopyNonAtomic(ad, i, plaintextblock, (short)0, (byte)(adlen & (byte)0xf));
          aegis128_enc_aut_step_partial();
      }
      
      ptlen = (short)(ctlen - 16);
      
      //decrypt the ciphertext
      for (i = 0; (short)(i+16) <= ptlen; i += 16) {
            aegis128_dec_aut_step_ciphertext(i);
      }
      
      // Deal with the partial block
      // In this program, we assume that the message length is multiple of bytes.
      if (  (ptlen & (byte)0xf) != 0 )  {
          Util.arrayFillNonAtomic(ciphertextblock, (short)0, LEN, (byte)0x00);
          Util.arrayCopyNonAtomic(ct, i, ciphertextblock, (short)0, (byte)(ptlen & (byte)0xf));
          aegis128_dec_aut_step_partial();
          //copy the plaintext
          Util.arrayCopyNonAtomic(plaintextblock, (short)0, pt, i, (byte)(ptlen & (byte)0xf));
          
          //need to modify the state here
          Util.arrayFillNonAtomic(plaintextblock, (short)0, (byte)(ptlen & (byte)0xf), (byte)0x00);
          for(byte k=0; k<16; k++)  //XOR128
            state[k] ^= plaintextblock[k];
      
      }
      
      //System.out.println("state_decrypt:");
      //System.out.println(AegisMain.bytesToHex(state));
      
      // verify tag
      aegis128_tag_generation();  //tag is stored in mac
      //for (byte j = 0; j  < 16; j++) check |= (mac[j] ^ ct[(short)(ctlen - 16 + j)]);
      for (byte j = 0; j  < 16; j++) check |= (ciphertextblock[j] ^ ct[(short)(ctlen - 16 + j)]);
        if (check == 0) return SUCCESS;
        else return -1;
  }
  
}

